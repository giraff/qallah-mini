{"version":3,"sources":["redux/types.js","components/auth/reducer/authReducer.js","components/register/reducer/regReducer.js","components/questiontome/reducer/ToMeDetailReducer.js","components/byother/reducer/byotherReducer.js","components/reflection/reducer/reflectionDetailReducer.js","components/profile/reducer/myaccountReducer.js","components/experience/reducer/experienceReducer.js","components/answer/reducer/answerReducer.js","redux/rootReducer.js","components/auth/saga/authSaga.js","components/register/saga/regSaga.js","components/questiontome/saga/ToMeDetailSaga.js","components/byother/saga/byotherSaga.js","components/reflection/saga/reflectionDetailSaga.js","components/profile/saga/myaccountSaga.js","components/experience/saga/experienceSaga.js","components/answer/saga/answerSaga.js","redux/rootSaga.js","store.js","assets/double-quotation.png","assets/double-quotation2.png","assets/나-icon.png","assets/남-icon.png","assets/경험-icon.png","assets/성찰-icon.png","pages/Main.js","components/auth/Login.js","pages/Login.js","components/register/Register.js","pages/Register.js","common/modal/PopUp.js","pages/tome/ToMeMain.js","components/questiontome/ToMeDetail.js","pages/tome/ToMeDetail.js","pages/tome/ToMeHistory.js","pages/tome/ToMeDone.js","pages/byother/ByOtherMain.js","components/byother/ByOtherQuetion.js","pages/byother/ByOtherDetail.js","pages/byother/ByOtherDone.js","pages/byother/ByOtherHistory.js","pages/experience/experienceMain.js","components/experience/ExperienceForm.js","pages/experience/experienceForm.js","pages/experience/experienceDone.js","pages/reflection/reflectionMain.js","components/reflection/reflectionDetail.js","pages/reflection/reflectionDetail.js","pages/reflection/reflectionDone.js","pages/reflection/reflectionHistory.js","common/modal/AccountModal.js","components/profile/accountform.js","pages/account/profilecommon.js","pages/account/proflielogout.js","pages/account/profile.js","components/answer/answer-component.js","components/answer/answer-day-list.js","components/answer/answer-month-list.js","components/answer/answer-year-list.js","components/answer/answerlist.js","components/answer/answertab.js","pages/account/answermain.js","components/answer/answer-detail-component.js","pages/account/answerdetail.js","components/layout/Footer.js","components/layout/Header.js","routes/Router.js","App.js","common/loadUser.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","CLEAR_ERROR_REQUEST","CLEAR_ERROR_SUCCESS","CLEAR_ERROR_FAILURE","USER_LOADING_REQUEST","USER_LOADING_SUCCESS","USER_LOADING_FAILURE","TOME_REQUEST","TOME_SUCCESS","TOME_FAILURE","TOME_ANSWER_RECEIVE_REQUEST","TOME_ANSWER_RECEIVE_SUCCESS","TOME_ANSWER_RECEIVE_FAILURE","BYOTHER_DETAIL_LOADING_REQUEST","BYOTHER_DETAIL_LOADING_SUCCESS","BYOTHER_DETAIL_LOADING_FAILURE","BYOTHER_ANSWER_LOADING_REQUEST","BYOTHER_ANSWER_LOADING_SUCCESS","BYOTHER_ANSWER_LOADING_FAILURE","BYOTHER_UPLOAD_REQUEST","BYOTHER_UPLOAD_SUCCESS","BYOTHER_UPLOAD_FAILURE","BYOTHER_DETAIL_DELETE_REQUEST","BYOTHER_DETAIL_DELETE_SUCCESS","BYOTHER_DETAIL_DELETE_FAILURE","TOME_ANSWER_UPLOAD_REQUEST","TOME_ANSWER_UPLOAD_SUCCESS","TOME_ANSWER_UPLOAD_FAILURE","TOME_INIT","REFL_REQUEST","REFL_SUCCESS","REFL_FAILURE","REFL_ANSWER_RECEIVE_REQUEST","REFL_ANSWER_RECEIVE_SUCCESS","REFL_ANSWER_RECEIVE_FAILURE","REFL_ANSWER_UPLOAD_REQUEST","REFL_ANSWER_UPLOAD_SUCCESS","REFL_ANSWER_UPLOAD_FAILURE","REFL_INIT","MYAC_RECEIVE_REQUEST","MYAC_RECEIVE_SUCCESS","MYAC_RECEIVE_FAILURE","MYAC_SEND_PREVPW_REQUEST","MYAC_SEND_PREVPW_SUCCESS","MYAC_SEND_PREVPW_FAILURE","MYAC_UPDATE_REQUEST","MYAC_UPDATE_SUCCESS","MYAC_UPDATE_FAILURE","MYAC_INIT","MYAC_PROFILE_IMAGE_UPDATE_REQUEST","MYAC_PROFILE_IMAGE_UPDATE_SUCCESS","MYAC_PROFILE_IMAGE_UPDATE_FAILURE","MYAC_PROFILE_IMAGE_DELETE_REQUEST","MYAC_PROFILE_IMAGE_DELETE_SUCCESS","MYAC_PROFILE_IMAGE_DELETE_FAILURE","EXPERIENCE_UPLOAD_REQUEST","EXPERIENCE_UPLOAD_SUCCESS","EXPERIENCE_UPLOAD_FAILURE","EXPERIENCE_LOAD_REQUEST","EXPERIENCE_LOAD_SUCCESS","EXPERIENCE_LOAD_FAILURE","EXPR_CLEAR_ERROR_REQUEST","EXPR_CLEAR_ERROR_SUCCESS","EXPR_CLEAR_ERROR_FAILURE","ANSWER_LOAD_REQUEST","ANSWER_LOAD_SUCCESS","ANSWER_LOAD_FAILURE","ANSWER_YEAR_SET_REQUEST","ANSWER_YEAR_SET_SUCCESS","ANSWER_YEAR_SET_FAILURE","ANSWER_DETAIL_LOAD_REQUEST","ANSWER_DETAIL_LOAD_SUCCESS","ANSWER_DETAIL_LOAD_FAILURE","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","userName","errorMsg","authReducer","state","action","type","setItem","payload","name","removeItem","data","msg","user_name","isRegistied","regReducer","isToMe","isToMeAnswerReceive","isToMeAnswerUpload","tomeReducer","answer","error","byotherReducer","answer_content","isRefl","isReflAnswerReceive","isReflAnswerUpload","reflReducer","initalState","isMyAccountReceive","isMyAccountPrevPwReceive","isMyAccountUpdate","profileurl","uploaded","deleted","myacReducer","url","isUploaded","experience","experienceReducer","answers","currentYear","answerDetail","answerReducer","rootReducer","history","combineReducers","router","connectRouter","auth","reg","tomedetail","ToMeDetailReducer","byother","refl","myac","loginUser","watchLoginUser","logoutUser","watchLogoutUser","userLoading","watchuserLoading","clearError","watchclearError","authSaga","loginUserAPI","loginData","axios","post","call","result","put","response","takeEvery","userLoadingAPI","config","headers","get","console","all","fork","regUser","watchRegUser","regSaga","regUserAPI","regData","ToMeDetail","watchToMeDetail","ToMeAnswerReceive","watchToMeAnswerReceive","ToMeDetailSaga","ToMeAnswerUpload","watchToMeAnswerUpload","ToMeDetailAPI","ToMeData","ToMeAnswerReceiveAPI","ToMeAnswerData","params","question_seq","ToMeAnswerUploadAPI","ToMeUploadData","loadQuestions","watchLoadQuestion","uploadAnswer","watchUploadAnswer","loadAnswer","watchLoadAnswer","deleteAnswerDetail","watchDeleteAnswerDetail","byotherSaga","loadQuestionsAPI","uploadAnswerAPI","page","loadAnswerAPI","parseInt","deleteAnswerDetailAPI","delete","ReflDetail","watchReflDetail","ReflAnswerReceive","watchReflAnswerReceive","ReflDetailSaga","ReflAnswerUpload","watchReflAnswerUpload","ReflDetailAPI","ReflData","ReflAnswerReceiveAPI","ReflAnswerData","ReflAnswerUploadAPI","ReflUploadData","MyacDetail","watchMyacDetail","MyacPrevPw","watchMyacPrevPw","MyacUpdate","watchMyacUpdate","MyacProfileUpdate","watchMyacProfileUpdate","MyacProfileDelete","watchMyacProfileDelete","MyacDetailSaga","MyacDetailAPI","MyacData","MyacPrevPwAPI","paylaod","MyacUpdateAPI","MyacProfileUpdateAPI","imageFormData","withCredentials","experienceLoad","watchExperienceLoad","experienceUpload","watchExperienceUpload","watchexprClearError","experienceSaga","experienceUploadAPI","answerLoading","watchAnswerLoading","answerYearSet","watchAnswerYearSetting","answerDetailLoad","watchAnswerDetailLoading","answerSaga","answerLoadingAPI","newArr","Set","map","YEAR","body","length","answerDetailLoadAPI","info","year","month","day","rootSaga","ToMeSaga","reflSaga","myacSaga","dotenv","defaults","baseURL","process","REACT_APP_BASIC_SERVER_URL","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","createRootReducer","applyMiddleware","run","Main","authstate","useSelector","className","src","quote_l","alt","quote_r","to","q_tome","q_byothers","q_exp","q_ref","Login","useState","localMsg","setLocalMsg","email","password","form","setValues","dispatch","useDispatch","useHistory","useEffect","push","e","location","onChange","target","value","onSubmit","preventDefault","id","placeholder","Register","userEmail","userPassword","pwCheck","setPwCheck","regResult","exp","test","disabled","PopUp","modal","setModal","FirstPageLink","routerLink","load","a","aria-label","role","tabIndex","onKeyDown","onClick","style","lineHeight","color","QuestiontomeMain","linkObject","clickEvent","QuestionToMeDetail","ToMeObj","ToMeChk","ToMeReceiveChk","QuestionObj","setQuestionValues","question_context","question_answer","next_button","prev_button","question_length","errcheck","seterrCheck","question_content","undefined","next_question","answer_context","trim","prev_question","done","done_phr","next_phr","prev_phr","done_hidden_btn","next_hidden_btn","prev_hidden_btn","width","backgroundColor","QuestiontomeDetail","ToMeHistory","historydate","setHistoryDate","loadhistory","status","then","href","val","MONTH","DAY","seq","ToMeDone","ByOtherMain","ByOtherQuestion","req","match","currentPage","setCurrentPage","total","setTotal","questionContent","setQuestionContent","answerContent","setAnswerContent","inputChange","setInputChange","inputEmptyError","setInputEmptyError","getQuestionAPI","questionTotal","res","postAnswer","onClickEvent","answerData","Body","other_question_seq","other_question_content","ByOtherDetail","ByOtherDone","ByOtherHistory","getHistoryAPI","script","experienceMain","ObjectArray","headline","startDate","text","forEach","endDate","classname","dataObject","timeline","date","document","createElement","JSON","stringify","appendChild","removeChild","ExperienceForm","isChecked","setIsChecked","handleChange","autoComplete","cols","rows","checked","event","label","handleSubmit","experienceForm","experienceDone","ReflectionMain","reflcheck","setCheck","checkanswer","ReflectionDetail","ReflObj","ReflChk","ReflReceiveChk","randindex","Math","floor","random","refl_content","refl_answer_content","ReflectiontomeDetail","ReflectionDone","ReflectionHistory","AccountModal","modalMsg","setShowModal","setModalMsg","AccountForm","myaccountObj","myaccountChk","myaccountSendChk","profileImage","setProfileImage","setName","setEmail","prevpw","setPrevPw","newpw","setNewPw","re_newpw","setReNewPw","regexpNewPwCheck","setExpNewPwCheck","prevnewPwCheck","setPrevNewPwCheck","newrenewPwCheck","setNewRenewPwCheck","totalCheck","setTotalCheck","nameEditOpen","setNameEditOpen","nameContext","setNameContext","showModal","new_name","new_pw","pw","imgRef","useRef","handleClickUploadImage","current","click","handleChangeImage","files","includes","warn","size","FormData","append","compareprevDB","prevpwContent","newpwConteht","renewpwContent","nameEditContent","ref","hidden","profilecommon","profilelogout","onLogout","useCallback","Profile","AnswerComponent","currentMonth","currentDay","types","setTypes","TYPE","filter","handleClickEvent","AnswerDayList","days","setDays","AnswerMonthList","months","setMonths","monthArr","AnswerYearList","AnswerList","AnswerTab","yearTab","setYearTab","AnswerMain","AnswerDetailComponent","query","goBack","detail","question","AnswerDetail","search","queryString","parse","Footer","Date","getFullYear","Header","menuOpen","setMenuOpen","authLink","guestLink","AllRouter","path","exact","component","ToMeMain","from","App","loadUser","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17695b2e.chunk.js","sourcesContent":["// LOGIN\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\n\n// REGISTER\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\n\n// LOGOUT\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n\n// CLEAR error\nexport const CLEAR_ERROR_REQUEST = 'CLEAR_ERROR_REQUEST';\nexport const CLEAR_ERROR_SUCCESS = 'CLEAR_ERROR_SUCCESS';\nexport const CLEAR_ERROR_FAILURE = 'CLEAR_ERROR_FAILURE';\n\n// USER LOADING\nexport const USER_LOADING_REQUEST = 'USER_LOADING_REQUEST';\nexport const USER_LOADING_SUCCESS = 'USER_LOADING_SUCCESS';\nexport const USER_LOADING_FAILURE = 'USER_LOADING_FAILURE';\n\n// ToMeQuestion\nexport const TOME_REQUEST = 'TOME_REQUEST';\nexport const TOME_SUCCESS = 'TOME_SUCCESS';\nexport const TOME_FAILURE = 'TOME_FAILURE';\n\n// ToMeAnswerReceive\nexport const TOME_ANSWER_RECEIVE_REQUEST = 'TOME_ANSWER_RECEIVE_REQUEST';\nexport const TOME_ANSWER_RECEIVE_SUCCESS = 'TOME_ANSWER_RECEIVE_SUCCESS';\nexport const TOME_ANSWER_RECEIVE_FAILURE = 'TOME_ANSWER_RECEIVE_FAILURE';\n\n// BYOTHER DETAIL LOADING\nexport const BYOTHER_DETAIL_LOADING_REQUEST = 'BYOTHER_DETAIL_LOADING_REQUEST';\nexport const BYOTHER_DETAIL_LOADING_SUCCESS = 'BYOTHER_DETAIL_LOADING_SUCCESS';\nexport const BYOTHER_DETAIL_LOADING_FAILURE = 'BYOTHER_DETAIL_LOADING_FAILURE';\n\n// BYOTHER ANSWER LOADING\nexport const BYOTHER_ANSWER_LOADING_REQUEST = 'BYOTHER_ANSWER_LOADING_REQUEST';\nexport const BYOTHER_ANSWER_LOADING_SUCCESS = 'BYOTHER_ANSWER_LOADING_SUCCESS';\nexport const BYOTHER_ANSWER_LOADING_FAILURE = 'BYOTHER_ANSWER_LOADING_FAILURE';\n\n// BYOTHER_UPLOAD_REQUEST\nexport const BYOTHER_UPLOAD_REQUEST = 'BYOTHER_UPLOAD_REQUEST';\nexport const BYOTHER_UPLOAD_SUCCESS = 'BYOTHER_UPLOAD_SUCCESS';\nexport const BYOTHER_UPLOAD_FAILURE = 'BYOTHER_UPLOAD_FAILURE';\n\n// BYOTHER_DETAIL_DELETE_REQUEST\nexport const BYOTHER_DETAIL_DELETE_REQUEST = 'BYOTHER_DETAIL_DELETE_REQUEST';\nexport const BYOTHER_DETAIL_DELETE_SUCCESS = 'BYOTHER_DETAIL_DELETE_SUCCESS';\nexport const BYOTHER_DETAIL_DELETE_FAILURE = 'BYOTHER_DETAIL_DELETE_FAILURE';\n\n// ToMeAnswerUpload\nexport const TOME_ANSWER_UPLOAD_REQUEST = 'TOME_ANSWER_UPLOAD_REQUEST';\nexport const TOME_ANSWER_UPLOAD_SUCCESS = 'TOME_ANSWER_UPLOAD_SUCCESS';\nexport const TOME_ANSWER_UPLOAD_FAILURE = 'TOME_ANSWER_UPLOAD_FAILURE';\n\n// ToMeInit\nexport const TOME_INIT = 'TOME_INIT';\n\n// ReflQuestion\nexport const REFL_REQUEST = 'REFL_REQUEST';\nexport const REFL_SUCCESS = 'REFL_SUCCESS';\nexport const REFL_FAILURE = 'REFL_FAILURE';\n\n// ReflAnswerReceive\nexport const REFL_ANSWER_RECEIVE_REQUEST = 'REFL_ANSWER_RECEIVE_REQUEST';\nexport const REFL_ANSWER_RECEIVE_SUCCESS = 'REFL_ANSWER_RECEIVE_SUCCESS';\nexport const REFL_ANSWER_RECEIVE_FAILURE = 'REFL_ANSWER_RECEIVE_FAILURE';\n\n// ReflAnswerUpload\nexport const REFL_ANSWER_UPLOAD_REQUEST = 'REFL_ANSWER_UPLOAD_REQUEST';\nexport const REFL_ANSWER_UPLOAD_SUCCESS = 'REFL_ANSWER_UPLOAD_SUCCESS';\nexport const REFL_ANSWER_UPLOAD_FAILURE = 'REFL_ANSWER_UPLOAD_FAILURE';\n\n// ReflInit\nexport const REFL_INIT = 'REFL_INIT';\n\n// MyAccountReceive\nexport const MYAC_RECEIVE_REQUEST = 'MYAC_RECEIVE_REQUEST';\nexport const MYAC_RECEIVE_SUCCESS = 'MYAC_RECEIVE_SUCCESS';\nexport const MYAC_RECEIVE_FAILURE = 'MYAC_RECEIVE_FAILURE';\n\n// MyAccountSendPrevPW\nexport const MYAC_SEND_PREVPW_REQUEST = 'MYAC_SEND_PREVPW_REQUEST';\nexport const MYAC_SEND_PREVPW_SUCCESS = 'MYAC_SEND_PREVPW_SUCCESS';\nexport const MYAC_SEND_PREVPW_FAILURE = 'MYAC_SEND_PREVPW_FAILURE';\n\n// MyAccountUpdate\nexport const MYAC_UPDATE_REQUEST = 'MYAC_UPDATE_REQUEST';\nexport const MYAC_UPDATE_SUCCESS = 'MYAC_UPDATE_SUCCESS';\nexport const MYAC_UPDATE_FAILURE = 'MYAC_UPDATE_FAILURE';\n\n// MyacInit\nexport const MYAC_INIT = 'MYAC_INIT';\n\n// MyAccount PROFILE IMAGE UPDATE\nexport const MYAC_PROFILE_IMAGE_UPDATE_REQUEST = 'MYAC_PROFILE_IMAGE_UPDATE_REQUEST';\nexport const MYAC_PROFILE_IMAGE_UPDATE_SUCCESS = 'MYAC_PROFILE_IMAGE_UPDATE_SUCCESS';\nexport const MYAC_PROFILE_IMAGE_UPDATE_FAILURE = 'MYAC_PROFILE_IMAGE_UPDATE_FAILURE';\n\n// MyAccount PROFILE IMAGE DELETE\nexport const MYAC_PROFILE_IMAGE_DELETE_REQUEST = 'MYAC_PROFILE_IMAGE_DELETE_REQUEST';\nexport const MYAC_PROFILE_IMAGE_DELETE_SUCCESS = 'MYAC_PROFILE_IMAGE_DELETE_SUCCESS';\nexport const MYAC_PROFILE_IMAGE_DELETE_FAILURE = 'MYAC_PROFILE_IMAGE_DELETE_FAILURE';\n\n// EXPERIENCE UPLOAD\nexport const EXPERIENCE_UPLOAD_REQUEST = 'EXPERIENCE_UPLOAD_REQUEST';\nexport const EXPERIENCE_UPLOAD_SUCCESS = 'EXPERIENCE_UPLOAD_SUCCESS';\nexport const EXPERIENCE_UPLOAD_FAILURE = 'EXPERIENCE_UPLOAD_FAILURE';\n\n// EXPERIENCE LOAD\nexport const EXPERIENCE_LOAD_REQUEST = 'EXPERIENCE_LOAD_REQUEST';\nexport const EXPERIENCE_LOAD_SUCCESS = 'EXPERIENCE_LOAD_SUCCESS';\nexport const EXPERIENCE_LOAD_FAILURE = 'EXPERIENCE_LOAD_FAILURE';\n\n// EXPERIENCE CLEAR ERROR\nexport const EXPR_CLEAR_ERROR_REQUEST = 'EXPR_CLEAR_ERROR_REQUEST';\nexport const EXPR_CLEAR_ERROR_SUCCESS = 'EXPR_CLEAR_ERROR_SUCCESS';\nexport const EXPR_CLEAR_ERROR_FAILURE = 'EXPR_CLEAR_ERROR_FAILURE';\n\n// ANSWER LOAD REQUEST\nexport const ANSWER_LOAD_REQUEST = 'ANSWER_LOAD_REQUEST';\nexport const ANSWER_LOAD_SUCCESS = 'ANSWER_LOAD_SUCCESS';\nexport const ANSWER_LOAD_FAILURE = 'ANSWER_LOAD_FAILURE';\n\n// ANSWER_YEAR_SET_REQUEST\nexport const ANSWER_YEAR_SET_REQUEST = 'ANSWER_YEAR_SET_REQUEST';\nexport const ANSWER_YEAR_SET_SUCCESS = 'ANSWER_YEAR_SET_SUCCESS';\nexport const ANSWER_YEAR_SET_FAILURE = 'ANSWER_YEAR_SET_FAILURE';\n\n// ANSWER_DETAIL_LOAD\nexport const ANSWER_DETAIL_LOAD_REQUEST = 'ANSWER_DETAIL_LOAD_REQUEST';\nexport const ANSWER_DETAIL_LOAD_SUCCESS = 'ANSWER_DETAIL_LOAD_SUCCESS';\nexport const ANSWER_DETAIL_LOAD_FAILURE = 'ANSWER_DETAIL_LOAD_FAILURE';\n","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILURE,\n    USER_LOADING_REQUEST,\n    USER_LOADING_SUCCESS,\n    USER_LOADING_FAILURE,\n    CLEAR_ERROR_REQUEST,\n    CLEAR_ERROR_SUCCESS,\n    CLEAR_ERROR_FAILURE,\n} from '../../../redux/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: '',\n    userName: '',\n    errorMsg: '',\n};\n\n// reducing function\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGOUT_REQUEST:\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n                errorMsg: '',\n                isLoading: true,\n            };\n        case LOGIN_SUCCESS:\n            console.log('Hi, token', state.token);\n            console.log(action.payload, 'login_success');\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isLoading: false,\n                isAuthenticated: true,\n                userName: action.payload.user.name,\n                errorMsg: '',\n            };\n        case LOGOUT_FAILURE:\n        case LOGIN_FAILURE:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                ...action.payload,\n                isLoading: false,\n                isAuthenticated: false,\n                token: null,\n                userName: null,\n                errorMsg: action.payload.data.msg,\n            };\n        case LOGOUT_SUCCESS:\n            localStorage.removeItem('token');\n            return {\n                token: null,\n                isLoading: false,\n                isAuthenticated: false,\n                userName: null,\n                user: null,\n                errorMsg: '',\n            };\n        case USER_LOADING_REQUEST:\n            console.log('authReducer 발동 : USER_LOADING_REQUEST');\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case USER_LOADING_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload,\n                userName: action.payload.user_name,\n            };\n        case USER_LOADING_FAILURE:\n            return {\n                ...state,\n                isAuthenticated: false,\n                isLoading: false,\n                user: null,\n            };\n        case CLEAR_ERROR_REQUEST:\n            return {\n                ...state,\n            };\n        case CLEAR_ERROR_SUCCESS: // 에러를 모두 날려보낸다\n            return {\n                ...state,\n                errorMsg: '',\n            };\n        case CLEAR_ERROR_FAILURE:\n            return {\n                ...state,\n                errorMsg: 'Clear Error Fail',\n            };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","import { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from '../../../redux/types';\n\nconst initialState = {\n    isRegistied: false,\n};\n\nconst regReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REGISTER_REQUEST:\n            console.log('regReducer 발동 : REGISTER_REQUEST');\n            return {\n                ...state,\n            };\n        case REGISTER_SUCCESS:\n            // console.log('Hi, regToken', state.token);\n            console.log(action.payload, 'register_success');\n            // localStorage.setItem(\"token\", action.payload.token);\n            return {\n                ...state,\n                isRegistied: true,\n            };\n        case REGISTER_FAILURE:\n            console.log('register_failure');\n            // localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                isRegistied: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default regReducer;\n","import {\n    TOME_INIT,\n    TOME_REQUEST,\n    TOME_SUCCESS,\n    TOME_FAILURE,\n    TOME_ANSWER_RECEIVE_REQUEST,\n    TOME_ANSWER_RECEIVE_SUCCESS,\n    TOME_ANSWER_RECEIVE_FAILURE,\n    TOME_ANSWER_UPLOAD_REQUEST,\n    TOME_ANSWER_UPLOAD_SUCCESS,\n    TOME_ANSWER_UPLOAD_FAILURE,\n} from '../../../redux/types';\n\nconst initialState = {\n    isToMe: false,\n    isToMeAnswerReceive: false,\n    isToMeAnswerUpload: false,\n    payload: '',\n};\n\nconst tomeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOME_REQUEST:\n            console.log('ToMeDetailReducer 발동 : TOME_REQUEST');\n            return {\n                ...state,\n            };\n        case TOME_SUCCESS:\n            // console.log('Hi, regToken', state.token);\n            console.log(action.payload, 'ToMe_success');\n            console.log('state값 : ', state);\n            return {\n                ...state,\n                isToMe: true,\n                payload: action.payload,\n            };\n        case TOME_FAILURE:\n            console.log('ToMe_failure');\n            // localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                isToMe: false,\n            };\n        case TOME_ANSWER_RECEIVE_REQUEST:\n            console.log('ToMeDetailReducer 발동 : TOME_ANSWER_RECEIVE_REQ');\n            return {\n                ...state,\n                isToMeAnswerReceive: false,\n            };\n        case TOME_ANSWER_RECEIVE_SUCCESS:\n            console.log(action.payload, 'TOME_ANSWER_RECEIVE_SUCCESS');\n            return {\n                ...state,\n                isToMeAnswerReceive: true,\n                payload: action.payload,\n            };\n        case TOME_ANSWER_RECEIVE_FAILURE:\n            console.log('TOME_ANSWER_RECEIVE_FAILURE');\n            return {\n                ...state,\n                isToMeAnswerReceive: false,\n            };\n        case TOME_ANSWER_UPLOAD_REQUEST:\n            console.log('ToMeDetailReducer 발동: TOME_ANSWER_UPLOAD_REQ');\n            return {\n                ...state,\n            };\n        case TOME_ANSWER_UPLOAD_SUCCESS:\n            console.log('ToMeDetailReducer 발동: TOME_ANSWER_UPLOAD_SUCCRESS');\n            console.log('답변 입력 성공?', action.payload);\n            return {\n                ...state,\n                isToMeAnswerUpload: true,\n            };\n        case TOME_ANSWER_UPLOAD_FAILURE:\n            console.log('ToMeDetailReducer 발동: TOME_ANSWER_UPLOAD_FAILURE');\n            return {\n                ...state,\n                isToMeAnswerUpload: false,\n            };\n        case TOME_INIT:\n            console.log('ToMeDetail State를 초기화 합니다.');\n            return {\n                isToMe: false,\n                isToMeAnswerReceive: false,\n                isToMeAnswerUpload: false,\n                payload: '',\n            };\n        default:\n            return state;\n    }\n};\n\nexport default tomeReducer;\n","import {\n    BYOTHER_DETAIL_LOADING_REQUEST,\n    BYOTHER_DETAIL_LOADING_SUCCESS,\n    BYOTHER_DETAIL_LOADING_FAILURE,\n    BYOTHER_UPLOAD_REQUEST,\n    BYOTHER_UPLOAD_SUCCESS,\n    BYOTHER_UPLOAD_FAILURE,\n    BYOTHER_ANSWER_LOADING_REQUEST,\n    BYOTHER_ANSWER_LOADING_SUCCESS,\n    BYOTHER_ANSWER_LOADING_FAILURE,\n    BYOTHER_DETAIL_DELETE_REQUEST,\n    BYOTHER_DETAIL_DELETE_SUCCESS,\n    BYOTHER_DETAIL_DELETE_FAILURE,\n} from '../../../redux/types';\n\nconst initialState = {\n    isLoading: false,\n    answer: '',\n    error: '',\n};\n\nconst byotherReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case BYOTHER_DETAIL_LOADING_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case BYOTHER_DETAIL_LOADING_SUCCESS:\n            console.log('DETAIL_LOAD_SUCCESS', action.payload.length);\n            return {\n                ...state,\n                isLoading: false,\n                error: '',\n            };\n        case BYOTHER_DETAIL_LOADING_FAILURE:\n            console.log('DETAIL_LOAD_Failure');\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload.data.msg,\n            };\n        case BYOTHER_UPLOAD_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                error: '',\n            };\n        case BYOTHER_UPLOAD_SUCCESS:\n            console.log(action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                error: '',\n            };\n        case BYOTHER_UPLOAD_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload.data.msg,\n            };\n        case BYOTHER_ANSWER_LOADING_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                answer: '',\n                error: '',\n            };\n        case BYOTHER_ANSWER_LOADING_SUCCESS:\n            console.log('REDUCER', action);\n            return {\n                ...state,\n                isLoading: false,\n                answer: action.payload === '' ? '' : action.payload.answer_content,\n                error: '',\n            };\n        case BYOTHER_ANSWER_LOADING_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                answer: '',\n                error: action.payload,\n            };\n        case BYOTHER_DETAIL_DELETE_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case BYOTHER_DETAIL_DELETE_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                error: '',\n            };\n        case BYOTHER_DETAIL_DELETE_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                error: action.payload.data.msg,\n            };\n        default:\n            return state;\n    }\n};\nexport default byotherReducer;\n","import {\n    REFL_INIT,\n    REFL_REQUEST,\n    REFL_SUCCESS,\n    REFL_FAILURE,\n    REFL_ANSWER_RECEIVE_REQUEST,\n    REFL_ANSWER_RECEIVE_SUCCESS,\n    REFL_ANSWER_RECEIVE_FAILURE,\n    REFL_ANSWER_UPLOAD_REQUEST,\n    REFL_ANSWER_UPLOAD_SUCCESS,\n    REFL_ANSWER_UPLOAD_FAILURE,\n} from '../../../redux/types';\n\nconst initialState = {\n    isRefl: false,\n    isReflAnswerReceive: false,\n    isReflAnswerUpload: false,\n    payload: '',\n};\n\nconst reflReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REFL_REQUEST:\n            console.log('REFLDetailReducer 발동 : REFL_REQUEST');\n            return {\n                ...state,\n            };\n        case REFL_SUCCESS:\n            // console.log('Hi, regToken', state.token);\n            console.log(action.payload, 'REFL_success');\n            console.log('state값 : ', state);\n            return {\n                ...state,\n                isRefl: true,\n                payload: action.payload,\n            };\n        case REFL_FAILURE:\n            console.log('REFL_failure');\n            // localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                isRefl: false,\n            };\n        case REFL_ANSWER_RECEIVE_REQUEST:\n            console.log('REFLDetailReducer 발동 : REFL_ANSWER_RECEIVE_REQ');\n            return {\n                ...state,\n                isReflAnswerReceive: false,\n            };\n        case REFL_ANSWER_RECEIVE_SUCCESS:\n            console.log(action.payload, 'REFL_ANSWER_RECEIVE_SUCCESS');\n            return {\n                ...state,\n                isReflAnswerReceive: true,\n                payload: action.payload,\n            };\n        case REFL_ANSWER_RECEIVE_FAILURE:\n            console.log('REFL_ANSWER_RECEIVE_FAILURE');\n            return {\n                ...state,\n                isReflAnswerReceive: false,\n            };\n        case REFL_ANSWER_UPLOAD_REQUEST:\n            console.log('REFLDetailReducer 발동: REFL_ANSWER_UPLOAD_REQ');\n            return {\n                ...state,\n            };\n        case REFL_ANSWER_UPLOAD_SUCCESS:\n            console.log('REFLDetailReducer 발동: REFL_ANSWER_UPLOAD_SUCCRESS');\n            console.log('답변 입력 성공?', action.payload);\n            return {\n                ...state,\n                isReflAnswerUpload: true,\n            };\n        case REFL_ANSWER_UPLOAD_FAILURE:\n            console.log('REFLDetailReducer 발동: REFL_ANSWER_UPLOAD_FAILURE');\n            return {\n                ...state,\n                isReflAnswerUpload: false,\n            };\n        case REFL_INIT:\n            console.log('REFLDetail State를 초기화 합니다.');\n            return {\n                isRefl: false,\n                isReflAnswerReceive: false,\n                isReflAnswerUpload: false,\n                payload: '',\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reflReducer;\n","import {\n    MYAC_RECEIVE_REQUEST,\n    MYAC_RECEIVE_SUCCESS,\n    MYAC_RECEIVE_FAILURE,\n    MYAC_SEND_PREVPW_REQUEST,\n    MYAC_SEND_PREVPW_SUCCESS,\n    MYAC_SEND_PREVPW_FAILURE,\n    MYAC_UPDATE_REQUEST,\n    MYAC_UPDATE_SUCCESS,\n    MYAC_UPDATE_FAILURE,\n    MYAC_INIT,\n    MYAC_PROFILE_IMAGE_UPDATE_REQUEST,\n    MYAC_PROFILE_IMAGE_DELETE_SUCCESS,\n    MYAC_PROFILE_IMAGE_UPDATE_SUCCESS,\n    MYAC_PROFILE_IMAGE_UPDATE_FAILURE,\n    MYAC_PROFILE_IMAGE_DELETE_REQUEST,\n    MYAC_PROFILE_IMAGE_DELETE_FAILURE,\n} from '../../../redux/types';\n\nconst initalState = {\n    isMyAccountReceive: false,\n    isMyAccountPrevPwReceive: false,\n    isMyAccountUpdate: false,\n    payload: '',\n    profileurl: '',\n    uploaded: false,\n    deleted: false,\n};\n\nconst myacReducer = (state = initalState, action) => {\n    switch (action.type) {\n        case MYAC_RECEIVE_REQUEST:\n            console.log('MyacDetailReducer 발동 : MYAC_REQ');\n            return {\n                ...state,\n            };\n        case MYAC_RECEIVE_SUCCESS:\n            console.log(action.payload, 'Myac_Success');\n            return {\n                ...state,\n                isMyAccountReceive: true,\n                payload: action.payload,\n            };\n        case MYAC_RECEIVE_FAILURE:\n            console.log('Myac_failure');\n            return {\n                ...state,\n                isMyAccountReceive: false,\n            };\n        case MYAC_SEND_PREVPW_REQUEST:\n            console.log('MyacDetailReducer 발동 : MYAC_PREVPW_REQ');\n            return {\n                ...state,\n            };\n        case MYAC_SEND_PREVPW_SUCCESS:\n            console.log(action.payload, 'Myac_PREVPW_Success');\n            console.log('state값: ', state);\n            return {\n                ...state,\n                isMyAccountPrevPwReceive: true,\n                payload: action.payload,\n            };\n        case MYAC_SEND_PREVPW_FAILURE:\n            console.log('Myac_PREVPW_failure');\n            return {\n                ...state,\n                isMyAccountPrevPwReceive: false,\n            };\n        case MYAC_UPDATE_REQUEST:\n            console.log('MyacDetailReducer 발동 : MYAC_UPDATE_REQ');\n            return {\n                ...state,\n            };\n        case MYAC_UPDATE_SUCCESS:\n            console.log(action.payload, 'Myac_UPDATE_Success');\n            console.log('state값: ', state);\n            return {\n                ...state,\n                isMyAccountUpdate: true,\n                payload: action.payload,\n            };\n        case MYAC_UPDATE_FAILURE:\n            console.log('Myac_UPDATE_failure');\n            return {\n                ...state,\n                isMyAccountUpdate: false,\n            };\n        case MYAC_INIT:\n            return {\n                ...initalState,\n            };\n        case MYAC_PROFILE_IMAGE_UPDATE_REQUEST:\n            return {\n                ...state,\n                uploaded: false,\n            };\n        case MYAC_PROFILE_IMAGE_UPDATE_SUCCESS:\n            console.log('profle', action.payload);\n            return {\n                ...state,\n                uploaded: true,\n                profileurl: action.payload.url,\n            };\n        case MYAC_PROFILE_IMAGE_UPDATE_FAILURE:\n            return {\n                ...state,\n                uploaded: false,\n                profileurl: '',\n            };\n        case MYAC_PROFILE_IMAGE_DELETE_REQUEST:\n            return {\n                ...state,\n                deleted: false,\n            };\n        case MYAC_PROFILE_IMAGE_DELETE_SUCCESS:\n            return {\n                ...state,\n                profileurl: '',\n                deleted: true,\n            };\n        case MYAC_PROFILE_IMAGE_DELETE_FAILURE:\n            return {\n                ...state,\n                deleted: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default myacReducer;\n","import {\n    EXPERIENCE_LOAD_REQUEST,\n    EXPERIENCE_LOAD_SUCCESS,\n    EXPERIENCE_LOAD_FAILURE,\n    EXPERIENCE_UPLOAD_REQUEST,\n    EXPERIENCE_UPLOAD_SUCCESS,\n    EXPERIENCE_UPLOAD_FAILURE,\n    EXPR_CLEAR_ERROR_REQUEST,\n    EXPR_CLEAR_ERROR_SUCCESS,\n    EXPR_CLEAR_ERROR_FAILURE,\n} from '../../../redux/types';\n\nconst initialState = {\n    isLoading: false,\n    isUploaded: false,\n    experience: [],\n    errorMsg: '',\n};\n\nconst experienceReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case EXPERIENCE_LOAD_REQUEST:\n            console.log('experience LOAD 시도 중...');\n            return {\n                ...state,\n                isLoading: true,\n                isUploaded: false,\n                errorMsg: '',\n            };\n        case EXPERIENCE_LOAD_SUCCESS:\n            console.log('experience LOAD 성공 =>', action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                experience: action.payload,\n                isUploaded: false,\n                errorMsg: '',\n            };\n        case EXPERIENCE_LOAD_FAILURE:\n            console.log('experience LOAD 실패 =>', action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                isUploaded: false,\n\n                experience: [],\n                errorMsg: action.payload.data,\n            };\n        case EXPERIENCE_UPLOAD_REQUEST:\n            console.log('experience 업로드 시도 중...');\n            return {\n                ...state,\n                isLoading: true,\n                isUploaded: false,\n                errorMsg: '',\n            };\n        case EXPERIENCE_UPLOAD_SUCCESS:\n            console.log('experience 업로드 성공 =>', action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                isUploaded: true,\n                errorMsg: '',\n            };\n        case EXPERIENCE_UPLOAD_FAILURE:\n            console.log('experience 업로드 실패 =>', action.payload.data);\n            return {\n                ...state,\n                isLoading: false,\n                isUploaded: false,\n                errorMsg: action.payload.data.msg,\n            };\n        case EXPR_CLEAR_ERROR_REQUEST:\n            return {\n                ...state,\n            };\n        case EXPR_CLEAR_ERROR_SUCCESS: // 에러를 모두 날려보낸다\n            return {\n                ...state,\n                errorMsg: '',\n            };\n        case EXPR_CLEAR_ERROR_FAILURE:\n            return {\n                ...state,\n                errorMsg: 'Clear Error Fail',\n            };\n        default:\n            return state;\n    }\n};\n\nexport default experienceReducer;\n","import {\n    ANSWER_LOAD_REQUEST,\n    ANSWER_LOAD_SUCCESS,\n    ANSWER_LOAD_FAILURE,\n    ANSWER_YEAR_SET_REQUEST,\n    ANSWER_YEAR_SET_SUCCESS,\n    ANSWER_YEAR_SET_FAILURE,\n    ANSWER_DETAIL_LOAD_REQUEST,\n    ANSWER_DETAIL_LOAD_SUCCESS,\n    ANSWER_DETAIL_LOAD_FAILURE,\n} from '../../../redux/types';\n\nconst initialState = {\n    isLoading: false,\n    errorMsg: '',\n    answers: '',\n    currentYear: '',\n    answerDetail: '',\n};\n\nconst answerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ANSWER_YEAR_SET_REQUEST:\n        case ANSWER_LOAD_REQUEST:\n        case ANSWER_DETAIL_LOAD_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                errorMsg: '',\n            };\n        case ANSWER_LOAD_SUCCESS:\n            console.log('Answer Load Success =>', action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                errorMsg: '',\n                answers: action.payload.answers,\n                // currentYear: action.payload.currentYear,\n            };\n        case ANSWER_LOAD_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                answers: '',\n                errorMsg: action.payload.data.msg,\n            };\n        case ANSWER_YEAR_SET_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                currentYear: action.payload,\n                errorMsg: '',\n            };\n        case ANSWER_YEAR_SET_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                currentYear: '',\n                errorMsg: action.payload.data.msg,\n            };\n        case ANSWER_DETAIL_LOAD_SUCCESS:\n            console.log('detail load success => ', action.payload);\n            return {\n                ...state,\n                isLoading: false,\n                errorMsg: '',\n                answerDetail: action.payload,\n            };\n        case ANSWER_DETAIL_LOAD_FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                answerDetail: '',\n                errorMsg: action.payload.data.msg,\n            };\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n\nexport default answerReducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport authReducer from '../components/auth/reducer/authReducer';\nimport regReducer from '../components/register/reducer/regReducer';\nimport ToMeDetailReducer from '../components/questiontome/reducer/ToMeDetailReducer';\nimport byotherReducer from '../components/byother/reducer/byotherReducer';\nimport reflReducer from '../components/reflection/reducer/reflectionDetailReducer';\nimport myacReducer from '../components/profile/reducer/myaccountReducer';\nimport experienceReducer from '../components/experience/reducer/experienceReducer';\nimport answerReducer from '../components/answer/reducer/answerReducer';\n\n// combineReducer는 redux store 내부의 여러 상태를 가진 리듀서를 관리하기 위해 사용\n// 반환값 : reducer 함수\nconst rootReducer = history =>\n    combineReducers({\n        router: connectRouter(history),\n        auth: authReducer,\n        reg: regReducer,\n        tomedetail: ToMeDetailReducer,\n        byother: byotherReducer,\n        refl: reflReducer,\n        myac: myacReducer,\n        experience: experienceReducer,\n        answer: answerReducer,\n    });\n\nexport default rootReducer;\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    LOGOUT_REQUEST,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAILURE,\n    USER_LOADING_REQUEST,\n    USER_LOADING_SUCCESS,\n    USER_LOADING_FAILURE,\n    CLEAR_ERROR_REQUEST,\n    CLEAR_ERROR_SUCCESS,\n    CLEAR_ERROR_FAILURE,\n} from '../../../redux/types';\n\n/** LOGIN : 서버와 통신 필요함 */\nconst loginUserAPI = loginData => {\n    // console.log('4. loginUserAPI 발동 -> axios.post 요청 보냄')\n    console.log(loginData, 'authSaga/loginData');\n\n    // server측으로 post 요청 (express가 받고 router 처리)\n    return axios.post('/api/auth', loginData);\n};\n\nfunction* loginUser(action) {\n    // console.log('3. loginUser(action) 발동')\n    try {\n        // loginUserAPI에 action.payload를 인자로 보내면서 실행 -> axios.post 결과 받아옴\n        const result = yield call(loginUserAPI, action.payload);\n        yield put({\n            type: LOGIN_SUCCESS,\n            // server/routes/api/auth에서 res 에 넘긴 {token, user} 객체 data를 payload로 보냄\n            payload: result.data,\n        });\n    } catch (e) {\n        // try 문 중간에 에러 발생 시 LOGIN_FAILURE로 상태 변화 요청하고 에러 보냄\n        yield put({\n            type: LOGIN_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\n// LoginUser 감시 함수 : LOGIN_REQUEST를 기다렸다가 오면 loginUser 함수 실행\nfunction* watchLoginUser() {\n    yield takeEvery(LOGIN_REQUEST, loginUser);\n}\n\n/** LOGOUT\n * 서버와 통신할 필요가 없다.\n */\nfunction* logoutUser() {\n    try {\n        yield put({\n            type: LOGOUT_SUCCESS,\n        });\n    } catch (e) {\n        yield put({\n            type: LOGOUT_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogoutUser() {\n    yield takeEvery(LOGOUT_REQUEST, logoutUser);\n}\n\n/** USER LOADING */\nconst userLoadingAPI = token => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.get('/api/auth/user', config);\n};\n\nfunction* userLoading(action) {\n    try {\n        const result = yield call(userLoadingAPI, action.payload);\n\n        console.log('userLoading 후, result :', result);\n        yield put({\n            type: USER_LOADING_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        console.log('userLoading 실패 ');\n        yield put({\n            type: USER_LOADING_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchuserLoading() {\n    yield takeEvery(USER_LOADING_REQUEST, userLoading);\n}\n\nfunction* clearError() {\n    try {\n        yield put({\n            type: CLEAR_ERROR_SUCCESS,\n        });\n    } catch (e) {\n        yield put({\n            type: CLEAR_ERROR_FAILURE,\n        });\n        console.error(e);\n    }\n}\n\nfunction* watchclearError() {\n    yield takeEvery(CLEAR_ERROR_REQUEST, clearError);\n}\n\nexport default function* authSaga() {\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchuserLoading), fork(watchclearError)]);\n}\n","import { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from 'redux/types';\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n/** REGISTER : 서버와 통신 필요함 */\nconst regUserAPI = regData =>\n    // server측으로 post 요청 (express가 받고 router 처리)\n    axios.post('/api/user/register', regData);\n\nfunction* regUser(action) {\n    console.log('regUser(action) 발동');\n    try {\n        // regUserAPI에 action.payload를 인자로 보내면서 실행 -> axios.post 결과 받아옴\n        const result = yield call(regUserAPI, action.payload);\n        console.log(result);\n        yield put({\n            type: REGISTER_SUCCESS,\n            // server/routes/api/user에서 res 에 넘긴 {user} 객체 data를 payload로 보냄\n            payload: result.data,\n        });\n    } catch (e) {\n        // try 문 중간에 에러 발생 시 REGISTER_FAILURE로 상태 변화 요청하고 에러 보냄\n        yield put({\n            type: REGISTER_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n// RegUser 감시 함수 : REGISTER_REQUEST를 기다렸다가 오면 regUser 함수 실행\nfunction* watchRegUser() {\n    console.log('regSaga 발동, REGISTER_REQ');\n    yield takeEvery(REGISTER_REQUEST, regUser);\n}\n\nexport default function* regSaga() {\n    yield all([fork(watchRegUser)]);\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    TOME_REQUEST,\n    TOME_SUCCESS,\n    TOME_FAILURE,\n    TOME_ANSWER_RECEIVE_REQUEST,\n    TOME_ANSWER_RECEIVE_SUCCESS,\n    TOME_ANSWER_RECEIVE_FAILURE,\n    TOME_ANSWER_UPLOAD_SUCCESS,\n    TOME_ANSWER_UPLOAD_FAILURE,\n    TOME_ANSWER_UPLOAD_REQUEST,\n} from '../../../redux/types';\n\n/** ToMeDetail : 서버와 통신 필요함 */\nconst ToMeDetailAPI = ToMeData => {\n    console.log('ToMeDetailAPI 발동 -> axios.post 요청 보냄');\n    console.log(ToMeData, 'ToMeDetail/ToMeData');\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n    // server측으로 post 요청 (express가 받고 router 처리)\n    return axios.get('/api/tome/detail', ToMeData, config);\n};\n\nfunction* ToMeDetail(action) {\n    console.log('ToMeDetail(action) 발동');\n    try {\n        // ToMeDetailAPI에 action.payload를 인자로 보내면서 실행 -> axios.get 결과 받아옴\n        const result = yield call(ToMeDetailAPI, action.payload);\n        console.log('api/tome/detail 에서 받아온 결과값', result);\n        yield put({\n            type: TOME_SUCCESS,\n            // server/routes/tome/detail에서 res 에 넘긴 {user} 객체 data를 payload로 보냄\n            payload: result.data,\n        });\n    } catch (e) {\n        // try 문 중간에 에러 발생 시 TOME_FAILURE로 상태 변화 요청하고 에러 보냄\n        yield put({\n            type: TOME_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n// RegUser 감시 함수 : TOME_REQUEST를 기다렸다가 오면 regUser 함수 실행\nfunction* watchToMeDetail() {\n    console.log('ToMeDetailSaga 발동, TOME_REQ');\n    yield takeEvery(TOME_REQUEST, ToMeDetail);\n}\n\n/** ToMeAnswerReceive: 서버와 통신 필요함 */\nconst ToMeAnswerReceiveAPI = ToMeAnswerData => {\n    console.log('ToMeAnswerReceiveAPI 발동 -> axios.get 요청 보냄');\n    console.log(ToMeAnswerData, 'ToMeAnswerReceive/ToMeAnswerData');\n\n    /**\n     * 서충식 Comment\n     * 1. ToMeAnswerData에서 token이랑 질문seq를 꺼냄\n     * 2. 파라미터로 보낼꺼기 때문에 config객체에 params속성을 사용해서 질문 seq만 따로 실음 (이렇게하면 Header가 아닌 쿼리스트링으로 날라감)\n     *    GET 방식은 request body에 실어보내는게 아니라 쿼리 스트링으로 보내야하기 때문\n     *    쿼리스트링은 /api/test?seq=1234 이런 방식\n     * 3. 토큰이 존재하면 토큰도 config객체에 추가\n     *    => 얘는 header에 실어 보내야하기때문에 params에 추가하면 안됨\n     *\n     */\n\n    // 1번\n    const { token, question_seq } = ToMeAnswerData;\n\n    // 2번\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n        params: {\n            question_seq,\n        },\n    };\n\n    // 3번\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.get('/api/tome/answer/receive', config);\n};\n\nfunction* ToMeAnswerReceive(action) {\n    console.log('ToMeAnswerReceive(action) 발동');\n    try {\n        console.log('tome Answer Receive => ', action);\n        // ToMeAnswerReceiveAPI에 action.payload를 인자로 보내면서 실행 -> axios.get 결과 받아옴\n        const result = yield call(ToMeAnswerReceiveAPI, action.payload);\n        console.log('api/tome/answer/receive 에서 받아온 결과값', result);\n        yield put({\n            type: TOME_ANSWER_RECEIVE_SUCCESS,\n            // server/routes/tome/detail/answer 에서 res 에 넘긴 {user} 객체 data를 payload로 보냄\n            payload: result.data,\n        });\n    } catch (e) {\n        // try 문 중간에 에러 발생 시 TOME_FAILURE로 상태 변화 요청하고 에러 보냄\n        yield put({\n            type: TOME_ANSWER_RECEIVE_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\n// ToMeAnswerReceive 감시 함수 : TOME_ANSWER_RECEIVE_REQUEST를 기다렸다가 오면 ToMeAnswerReceive 함수 실행\nfunction* watchToMeAnswerReceive() {\n    console.log('ToMeAnswerReceive 발동, TOME_ANS_REC_REQ');\n    yield takeEvery(TOME_ANSWER_RECEIVE_REQUEST, ToMeAnswerReceive);\n}\n\nexport default function* ToMeDetailSaga() {\n    yield all([fork(watchToMeDetail), fork(watchToMeAnswerReceive), fork(watchToMeAnswerUpload)]);\n}\n\n/** ToMeAnswerUpload */\nconst ToMeAnswerUploadAPI = ToMeUploadData => {\n    console.log('ToMeAnswerUploadAPI 발동 -> axios.post 요청보냄');\n    console.log(ToMeUploadData, 'ToMeUploadData/ToMeUploadData');\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n    const { token } = ToMeUploadData;\n\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n    return axios.post('/api/tome/detail/answer/store', ToMeUploadData, config);\n};\n\nfunction* ToMeAnswerUpload(action) {\n    console.log('ToMeAnswerUpload(action) 발동');\n    try {\n        const result = yield call(ToMeAnswerUploadAPI, action.payload);\n        console.log('데이터 넘어왔냐?', result);\n        yield put({\n            type: TOME_ANSWER_UPLOAD_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: TOME_ANSWER_UPLOAD_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchToMeAnswerUpload() {\n    console.log('ToMeAnswerUpload 발동, TOME_ANS_UPL_REQ');\n    yield takeEvery(TOME_ANSWER_UPLOAD_REQUEST, ToMeAnswerUpload);\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    BYOTHER_DETAIL_LOADING_REQUEST,\n    BYOTHER_DETAIL_LOADING_SUCCESS,\n    BYOTHER_DETAIL_LOADING_FAILURE,\n    BYOTHER_UPLOAD_REQUEST,\n    BYOTHER_UPLOAD_SUCCESS,\n    BYOTHER_UPLOAD_FAILURE,\n    BYOTHER_ANSWER_LOADING_REQUEST,\n    BYOTHER_ANSWER_LOADING_SUCCESS,\n    BYOTHER_ANSWER_LOADING_FAILURE,\n    BYOTHER_DETAIL_DELETE_REQUEST,\n    BYOTHER_DETAIL_DELETE_SUCCESS,\n    BYOTHER_DETAIL_DELETE_FAILURE,\n} from '../../../redux/types';\n\nconst loadQuestionsAPI = () => axios.get(`/api/byother/detail`);\n\nfunction* loadQuestions() {\n    try {\n        const result = yield call(loadQuestionsAPI);\n\n        yield put({\n            type: BYOTHER_DETAIL_LOADING_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: BYOTHER_DETAIL_LOADING_FAILURE,\n            payload: e,\n        });\n    }\n}\n\nfunction* watchLoadQuestion() {\n    yield takeEvery(BYOTHER_DETAIL_LOADING_REQUEST, loadQuestions);\n}\n\n/** BYOTHER UPLOAD  */\nconst uploadAnswerAPI = data => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n\n    const { token, page } = data;\n\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.post(`/api/byother/detail/answer/${page}`, data, config);\n};\n\nfunction* uploadAnswer(action) {\n    try {\n        const result = yield call(uploadAnswerAPI, action.payload);\n\n        yield put({\n            type: BYOTHER_UPLOAD_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: BYOTHER_UPLOAD_FAILURE,\n            payload: e,\n        });\n    }\n}\n\nfunction* watchUploadAnswer() {\n    yield takeEvery(BYOTHER_UPLOAD_REQUEST, uploadAnswer);\n}\n\n/** BYOTHER ANSWER LOAD  */\nconst loadAnswerAPI = data => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n\n    const { token, page } = data;\n\n    console.log(data);\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.get(`/api/byother/answer/${parseInt(page, 10)}`, config);\n};\n\nfunction* loadAnswer(action) {\n    try {\n        console.log('saga도착', action);\n        const result = yield call(loadAnswerAPI, action.payload);\n        console.log('loadAnswer', result);\n        yield put({\n            type: BYOTHER_ANSWER_LOADING_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: BYOTHER_ANSWER_LOADING_FAILURE,\n            payload: e,\n        });\n    }\n}\n\nfunction* watchLoadAnswer() {\n    yield takeEvery(BYOTHER_ANSWER_LOADING_REQUEST, loadAnswer);\n}\n\n/** BYOTHER ANSWER DETAIL DELETE  */\nconst deleteAnswerDetailAPI = data => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n\n    const { token, page } = data;\n\n    console.log(data);\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.delete(`/api/byother/answer/detail/${page}`, config);\n};\n\nfunction* deleteAnswerDetail(action) {\n    try {\n        const result = yield call(deleteAnswerDetailAPI, action.payload);\n        yield put({\n            type: BYOTHER_DETAIL_DELETE_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: BYOTHER_DETAIL_DELETE_FAILURE,\n            payload: e,\n        });\n    }\n}\n\nfunction* watchDeleteAnswerDetail() {\n    yield takeEvery(BYOTHER_DETAIL_DELETE_REQUEST, deleteAnswerDetail);\n}\n\nexport default function* byotherSaga() {\n    yield all([fork(watchUploadAnswer), fork(watchLoadQuestion), fork(watchLoadAnswer), fork(watchDeleteAnswerDetail)]);\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    REFL_REQUEST,\n    REFL_SUCCESS,\n    REFL_FAILURE,\n    REFL_ANSWER_RECEIVE_REQUEST,\n    REFL_ANSWER_RECEIVE_SUCCESS,\n    REFL_ANSWER_RECEIVE_FAILURE,\n    REFL_ANSWER_UPLOAD_SUCCESS,\n    REFL_ANSWER_UPLOAD_FAILURE,\n    REFL_ANSWER_UPLOAD_REQUEST,\n} from '../../../redux/types';\n\n/** ReflDetail : 서버와 통신 필요함 */\nconst ReflDetailAPI = ReflData => {\n    console.log('ReflDetailAPI 발동 -> axios.post 요청 보냄');\n    console.log(ReflData, 'ReflDetail/ReflData');\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n    // server측으로 post 요청 (express가 받고 router 처리)\n    return axios.get('/api/refl/detail', ReflData, config);\n};\n\nfunction* ReflDetail(action) {\n    console.log('ReflDetail(action) 발동');\n    try {\n        // ReflDetailAPI에 action.payload를 인자로 보내면서 실행 -> axios.get 결과 받아옴\n        const result = yield call(ReflDetailAPI, action.payload);\n        console.log('api/refl/detail 에서 받아온 결과값', result);\n        yield put({\n            type: REFL_SUCCESS,\n            // server/routes/refl/detail에서 res 에 넘긴 {user} 객체 data를 payload로 보냄\n            payload: result.data,\n        });\n    } catch (e) {\n        // try 문 중간에 에러 발생 시 REFL_FAILURE로 상태 변화 요청하고 에러 보냄\n        yield put({\n            type: REFL_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n// RegUser 감시 함수 : REFL_REQUEST를 기다렸다가 오면 regUser 함수 실행\nfunction* watchReflDetail() {\n    console.log('ReflDetailSaga 발동, REFL_REQ');\n    yield takeEvery(REFL_REQUEST, ReflDetail);\n}\n\n/** ToMeAnswerReceive: 서버와 통신 필요함 */\nconst ReflAnswerReceiveAPI = ReflAnswerData => {\n    console.log('ReflAnswerReceiveAPI 발동 -> axios.get 요청 보냄');\n    console.log(ReflAnswerData, 'ReflAnswerReceive/ReflAnswerData');\n\n    /**\n     * 서충식 Comment\n     * 1. ReflAnswerData에서 token이랑 질문seq를 꺼냄\n     * 2. 파라미터로 보낼꺼기 때문에 config객체에 params속성을 사용해서 질문 seq만 따로 실음 (이렇게하면 Header가 아닌 쿼리스트링으로 날라감)\n     *    GET 방식은 request body에 실어보내는게 아니라 쿼리 스트링으로 보내야하기 때문\n     *    쿼리스트링은 /api/test?seq=1234 이런 방식\n     * 3. 토큰이 존재하면 토큰도 config객체에 추가\n     *    => 얘는 header에 실어 보내야하기때문에 params에 추가하면 안됨\n     *\n     */\n\n    // 1번\n    const { token, question_seq } = ReflAnswerData;\n\n    // 2번\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n        params: {\n            question_seq,\n        },\n    };\n\n    // 3번\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.get('/api/refl/answer/receive', config);\n};\n\nfunction* ReflAnswerReceive(action) {\n    console.log('ReflAnswerReceive(action) 발동');\n    try {\n        console.log('tome Answer Receive => ', action);\n        // ReflAnswerReceiveAPI에 action.payload를 인자로 보내면서 실행 -> axios.get 결과 받아옴\n        const result = yield call(ReflAnswerReceiveAPI, action.payload);\n        console.log('api/tome/answer/receive 에서 받아온 결과값', result);\n        yield put({\n            type: REFL_ANSWER_RECEIVE_SUCCESS,\n            // server/routes/refl/detail/answer 에서 res 에 넘긴 {user} 객체 data를 payload로 보냄\n            payload: result.data,\n        });\n    } catch (e) {\n        // try 문 중간에 에러 발생 시 REFL_FAILURE로 상태 변화 요청하고 에러 보냄\n        yield put({\n            type: REFL_ANSWER_RECEIVE_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\n// ReflAnswerReceive 감시 함수 : REFL_ANSWER_RECEIVE_REQUEST를 기다렸다가 오면 ReflAnswerReceive 함수 실행\nfunction* watchReflAnswerReceive() {\n    console.log('ReflAnswerReceive 발동, TOME_ANS_REC_REQ');\n    yield takeEvery(REFL_ANSWER_RECEIVE_REQUEST, ReflAnswerReceive);\n}\n\nexport default function* ReflDetailSaga() {\n    yield all([fork(watchReflDetail), fork(watchReflAnswerReceive), fork(watchReflAnswerUpload)]);\n}\n\n/** ToMeAnswerUpload */\nconst ReflAnswerUploadAPI = ReflUploadData => {\n    console.log('ReflAnswerUploadAPI 발동 -> axios.post 요청보냄');\n    console.log(ReflUploadData, 'ReflUploadData/ReflUploadData');\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n    const { token } = ReflUploadData;\n\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n    return axios.post('/api/refl/detail/answer/store', ReflUploadData, config);\n};\n\nfunction* ReflAnswerUpload(action) {\n    console.log('ReflAnswerUpload(action) 발동');\n    try {\n        const result = yield call(ReflAnswerUploadAPI, action.payload);\n        console.log('데이터 넘어왔냐?', result);\n        yield put({\n            type: REFL_ANSWER_UPLOAD_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: REFL_ANSWER_UPLOAD_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchReflAnswerUpload() {\n    console.log('ReflAnswerUpload 발동, REFL_ANS_UPL_REQ');\n    yield takeEvery(REFL_ANSWER_UPLOAD_REQUEST, ReflAnswerUpload);\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    MYAC_RECEIVE_REQUEST,\n    MYAC_RECEIVE_SUCCESS,\n    MYAC_RECEIVE_FAILURE,\n    MYAC_SEND_PREVPW_SUCCESS,\n    MYAC_SEND_PREVPW_FAILURE,\n    MYAC_SEND_PREVPW_REQUEST,\n    MYAC_UPDATE_SUCCESS,\n    MYAC_UPDATE_FAILURE,\n    MYAC_UPDATE_REQUEST,\n    MYAC_PROFILE_IMAGE_UPDATE_REQUEST,\n    MYAC_PROFILE_IMAGE_UPDATE_SUCCESS,\n    MYAC_PROFILE_IMAGE_UPDATE_FAILURE,\n    MYAC_PROFILE_IMAGE_DELETE_REQUEST,\n    MYAC_PROFILE_IMAGE_DELETE_SUCCESS,\n    MYAC_PROFILE_IMAGE_DELETE_FAILURE,\n} from '../../../redux/types';\n\nconst MyacDetailAPI = MyacData => {\n    console.log('MyacDetailAPI 발동 -> axios.get 요청 보냄');\n    console.log(MyacData, 'Myacdetail/MyacData');\n    const { token } = MyacData;\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.get('/api/myaccount/detail', config);\n};\n\nfunction* MyacDetail(action) {\n    console.log('MyacDetail(action) 발동');\n    try {\n        const result = yield call(MyacDetailAPI, action.payload);\n        yield put({\n            type: MYAC_RECEIVE_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: MYAC_RECEIVE_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchMyacDetail() {\n    console.log('MyacDetailSaga 발동, MYAC_REQ');\n    yield takeEvery(MYAC_RECEIVE_REQUEST, MyacDetail);\n}\n\nconst MyacPrevPwAPI = MyacData => {\n    console.log('MyacPrevPWAPI 발동 -> axios.post 요청 보냄');\n    console.log('Data >> ', MyacData);\n    const { token } = MyacData;\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n    return axios.post('/api/myaccount/pw', MyacData, config);\n};\n\nfunction* MyacPrevPw(action) {\n    console.log('MyacPrevPW(action) 발동');\n    try {\n        const result = yield call(MyacPrevPwAPI, action.payload);\n        yield put({\n            type: MYAC_SEND_PREVPW_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: MYAC_SEND_PREVPW_FAILURE,\n            paylaod: e.response,\n        });\n    }\n}\n\nfunction* watchMyacPrevPw() {\n    console.log('MyacPrevPWSaga 발동, MYAC_PREVPW_REQ');\n    yield takeEvery(MYAC_SEND_PREVPW_REQUEST, MyacPrevPw);\n}\n\nconst MyacUpdateAPI = MyacData => {\n    console.log('MyacUpdateAPI 발동 -> axios.post 요청 보냄');\n    const { token } = MyacData;\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n    return axios.post('/api/myaccount/update', MyacData, config);\n};\n\nfunction* MyacUpdate(action) {\n    console.log('MyacUpdate(action) 발동');\n    try {\n        const result = yield call(MyacUpdateAPI, action.payload);\n        yield put({\n            type: MYAC_UPDATE_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: MYAC_UPDATE_FAILURE,\n            paylaod: e.response,\n        });\n    }\n}\n\nfunction* watchMyacUpdate() {\n    console.log('MyacUpdateSaga 발동, MYAC_UPDATE_REQ');\n    yield takeEvery(MYAC_UPDATE_REQUEST, MyacUpdate);\n}\n\n//\nconst MyacProfileUpdateAPI = MyacData => {\n    console.log('MyacUpdateAPI 발동 -> axios.post 요청 보냄');\n    const { token, imageFormData } = MyacData;\n\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n        withCredentials: true,\n    };\n\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.post('/api/myaccount/profile', imageFormData, config);\n};\n\nfunction* MyacProfileUpdate(action) {\n    console.log('MyacUpdate(action) 발동', action.payload);\n    try {\n        const result = yield call(MyacProfileUpdateAPI, action.payload);\n        console.log('Myac Profile Update 결과 =>', result.data);\n        yield put({\n            type: MYAC_PROFILE_IMAGE_UPDATE_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: MYAC_PROFILE_IMAGE_UPDATE_FAILURE,\n            paylaod: e.response,\n        });\n    }\n}\n\nfunction* watchMyacProfileUpdate() {\n    yield takeEvery(MYAC_PROFILE_IMAGE_UPDATE_REQUEST, MyacProfileUpdate);\n}\n\n// const MyacProfileDeleteAPI = token => {\n//     const config = {\n//         headers: {\n//             'Content-type': 'application/json',\n//         },\n//     };\n\n//     if (token) {\n//         config.headers['x-auth-token'] = token;\n//     }\n\n//     return axios.delete('/api/myaccount/profile', config);\n// };\n\nfunction* MyacProfileDelete() {\n    try {\n        // const result = yield call(MyacProfileDeleteAPI, action.payload);\n        yield put({\n            type: MYAC_PROFILE_IMAGE_DELETE_SUCCESS,\n        });\n    } catch (e) {\n        yield put({\n            type: MYAC_PROFILE_IMAGE_DELETE_FAILURE,\n        });\n    }\n}\n\nfunction* watchMyacProfileDelete() {\n    yield takeEvery(MYAC_PROFILE_IMAGE_DELETE_REQUEST, MyacProfileDelete);\n}\n\nexport default function* MyacDetailSaga() {\n    yield all([fork(watchMyacDetail), fork(watchMyacPrevPw), fork(watchMyacUpdate), fork(watchMyacProfileUpdate), fork(watchMyacProfileDelete)]);\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n    EXPERIENCE_LOAD_REQUEST,\n    EXPERIENCE_LOAD_SUCCESS,\n    EXPERIENCE_LOAD_FAILURE,\n    EXPERIENCE_UPLOAD_REQUEST,\n    EXPERIENCE_UPLOAD_SUCCESS,\n    EXPERIENCE_UPLOAD_FAILURE,\n    EXPR_CLEAR_ERROR_REQUEST,\n    EXPR_CLEAR_ERROR_SUCCESS,\n    EXPR_CLEAR_ERROR_FAILURE,\n} from '../../../redux/types';\n\n/** EXPERIENCE LOAD */\n// const experienceLoadAPI = token => {\n//     const config = {\n//         headers: {\n//             'Content-type': 'application/json',\n//         },\n//     };\n//     if (token) {\n//         config.headers['x-auth-token'] = token;\n//     }\n//     return axios.get('api/experience', config);\n// };\n\nfunction* experienceLoad() {\n    try {\n        // const result = yield call(experienceLoadAPI, action.payload);\n\n        yield put({\n            type: EXPERIENCE_LOAD_SUCCESS,\n        });\n    } catch (e) {\n        yield put({\n            type: EXPERIENCE_LOAD_FAILURE,\n        });\n    }\n}\n\nfunction* watchExperienceLoad() {\n    console.log('ExperienceLoad 발동');\n    yield takeEvery(EXPERIENCE_LOAD_REQUEST, experienceLoad);\n}\n\n/** EXPERIENCE UPLOAD */\nconst experienceUploadAPI = data => {\n    console.log('업로드 API에 넘어온 값 => ', data);\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n\n    const { token } = data;\n    console.log('업로드 API에 넘어온 token => ', token);\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n    return axios.post('/api/experience/upload', data, config);\n};\n\nfunction* experienceUpload(action) {\n    console.log('experience Upload [Saga] => ', action.payload);\n    try {\n        const result = yield call(experienceUploadAPI, action.payload);\n        console.log('EXPERIENCE_UPLOAD_SUCCESS[SAGA]', result);\n        yield put({\n            type: EXPERIENCE_UPLOAD_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: EXPERIENCE_UPLOAD_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchExperienceUpload() {\n    console.log('ExperienceLoad 발동');\n    yield takeEvery(EXPERIENCE_UPLOAD_REQUEST, experienceUpload);\n}\n\nfunction* clearError() {\n    try {\n        yield put({\n            type: EXPR_CLEAR_ERROR_SUCCESS,\n        });\n    } catch (e) {\n        yield put({\n            type: EXPR_CLEAR_ERROR_FAILURE,\n        });\n    }\n}\n\nfunction* watchexprClearError() {\n    yield takeEvery(EXPR_CLEAR_ERROR_REQUEST, clearError);\n}\n\nexport default function* experienceSaga() {\n    yield all([fork(watchExperienceLoad), fork(watchExperienceUpload), fork(watchexprClearError)]);\n}\n","import axios from 'axios';\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport {\n    ANSWER_LOAD_REQUEST,\n    ANSWER_LOAD_SUCCESS,\n    ANSWER_LOAD_FAILURE,\n    ANSWER_YEAR_SET_REQUEST,\n    ANSWER_YEAR_SET_SUCCESS,\n    ANSWER_YEAR_SET_FAILURE,\n    ANSWER_DETAIL_LOAD_REQUEST,\n    ANSWER_DETAIL_LOAD_SUCCESS,\n    ANSWER_DETAIL_LOAD_FAILURE,\n} from '../../../redux/types';\n\n/** ANSWER LOADING */\nconst answerLoadingAPI = token => {\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n    };\n\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return axios.get('/api/answer/answertest', config);\n};\n\nfunction* answerLoading(action) {\n    try {\n        const result = yield call(answerLoadingAPI, action.payload);\n\n        console.log('answerLoading => ', result.data);\n\n        const newArr = result.data ? [...new Set(result.data.map(answer => answer.YEAR))] : [];\n\n        const body = {\n            answers: result.data ? result.data : '',\n            currentYear: newArr !== [] ? newArr[newArr.length - 1] : '',\n        };\n\n        yield put({\n            type: ANSWER_LOAD_SUCCESS,\n            payload: body,\n        });\n    } catch (e) {\n        yield put({\n            type: ANSWER_LOAD_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchAnswerLoading() {\n    yield takeEvery(ANSWER_LOAD_REQUEST, answerLoading);\n}\n\n// answer year set\nfunction* answerYearSet(action) {\n    try {\n        yield put({\n            type: ANSWER_YEAR_SET_SUCCESS,\n            payload: action.payload,\n        });\n    } catch (e) {\n        yield put({\n            type: ANSWER_YEAR_SET_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchAnswerYearSetting() {\n    yield takeEvery(ANSWER_YEAR_SET_REQUEST, answerYearSet);\n}\n\nconst answerDetailLoadAPI = body => {\n    const { token } = body;\n    console.log(body);\n\n    const { year, month, day, type } = body;\n    const obj = { year, month, day, type };\n    const config = {\n        headers: {\n            'Content-type': 'application/json',\n        },\n\n        params: {\n            info: obj,\n        },\n    };\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n    return axios('/api/answer/detail', config);\n};\n// answer Detail Load\nfunction* answerDetailLoad(action) {\n    const result = yield call(answerDetailLoadAPI, action.payload);\n    try {\n        yield put({\n            type: ANSWER_DETAIL_LOAD_SUCCESS,\n            payload: result.data,\n        });\n    } catch (e) {\n        yield put({\n            type: ANSWER_DETAIL_LOAD_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchAnswerDetailLoading() {\n    yield takeEvery(ANSWER_DETAIL_LOAD_REQUEST, answerDetailLoad);\n}\n\nexport default function* answerSaga() {\n    yield all([fork(watchAnswerLoading), fork(watchAnswerYearSetting), fork(watchAnswerDetailLoading)]);\n}\n","import { all, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport dotenv from 'dotenv';\nimport authSaga from '../components/auth/saga/authSaga';\nimport regSaga from '../components/register/saga/regSaga';\nimport ToMeSaga from '../components/questiontome/saga/ToMeDetailSaga';\nimport byotherSaga from '../components/byother/saga/byotherSaga';\nimport reflSaga from '../components/reflection/saga/reflectionDetailSaga';\nimport myacSaga from '../components/profile/saga/myaccountSaga';\nimport experienceSaga from '../components/experience/saga/experienceSaga';\nimport answerSaga from '../components/answer/saga/answerSaga';\n\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_BASIC_SERVER_URL;\n\nexport default function* rootSaga() {\n    yield all([\n        fork(regSaga),\n        fork(authSaga),\n        fork(ToMeSaga),\n        fork(byotherSaga),\n        fork(reflSaga),\n        fork(myacSaga),\n        fork(experienceSaga),\n        fork(answerSaga),\n    ]);\n}\n// 제너레이터 함수 : 여러 개의 반환값을 갖는 최신 문법 함수\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport createRootReducer from './redux/rootReducer';\nimport rootSaga from './redux/rootSaga';\n\n// history 내보내기\nexport const history = createBrowserHistory();\n\n// saga 미들웨어\nconst sagaMiddleware = createSagaMiddleware();\n\n// 초기 상태\nconst initialState = {};\n\n// 미들웨어 배열\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n// chrome에서 리덕스로 개발을 할 때 상태 진행을 볼 수 있게 해주는 개발자 도구\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n// 개발자 도구일 때 배포 환경에서 redux devtools를 볼 수 있다.\n// 우리의 웹이 어떻게 작동하는지 드러내기 때문에\n// 배포단계에서는 개발자 도구를 삭제하거나 안 보이게 해주어야 한다\nconst composeEnhancer = process.env.NODE_ENV === 'production' ? compose : devtools || compose;\n\n// store를 만들어주세요 => createRooteReducer랑 initailState랑 composeEnhancer을 합쳐서\nconst store = createStore(\n    // reducer 객체 전달\n    createRootReducer(history),\n    // preloaded state 전달\n    initialState,\n    // thunk(비동기 호출을 가능하게 하는 미들웨어)\n    composeEnhancer(applyMiddleware(...middlewares)),\n);\n\n// sagaMiddleware을 작동시켜주세요.\nconsole.log('sagaMiddleware 작동');\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/double-quotation.00adc518.png\";","export default __webpack_public_path__ + \"static/media/double-quotation2.28a0ce14.png\";","export default __webpack_public_path__ + \"static/media/나-icon.61cd37eb.png\";","export default __webpack_public_path__ + \"static/media/남-icon.48403e40.png\";","export default __webpack_public_path__ + \"static/media/경험-icon.0753f7fa.png\";","export default __webpack_public_path__ + \"static/media/성찰-icon.5348365b.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n// ../assets/double-quotation.png 이렇게 사용하거나 assets/double-quotation.png 이렇게 사용\nimport quote_l from 'assets/double-quotation.png';\nimport quote_r from 'assets/double-quotation2.png';\nimport q_tome from 'assets/나-icon.png';\nimport q_byothers from 'assets/남-icon.png';\nimport q_exp from 'assets/경험-icon.png';\nimport q_ref from 'assets/성찰-icon.png';\nimport { useSelector } from 'react-redux';\n\nconst Main = () => {\n    const authstate = useSelector(state => state.auth.isAuthenticated);\n    return (\n        <div className=\"main\">\n            <section className=\"main-banner-container\">\n                <div className=\"main-banner-overlay\">\n                    <div className=\"banner-wrap\">\n                        <div className=\"banner banner-wrap\">\n                            <h1 className=\"banner-title\">나에게</h1>\n                            <h1 className=\"banner-title\">질문하세요</h1>\n                            <div className=\"banner-desc\">모르는게 없는 세상</div>\n                            <div className=\"banner-desc\">나는 나를 안다고 말할 수 있을까?</div>\n                        </div>\n                        <div className=\"double-quotation double-quotation-l\">\n                            <img src={quote_l} alt=\"quote\" />\n                        </div>\n                        <div className=\"double-quotation double-quotation-r\">\n                            <img src={quote_r} alt=\"quote\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <section className=\"main-question-container\">\n                <h1 className=\"main-question-header eng-title\">Question</h1>\n                <div className=\"main-question-desc\">살면서 마주할 수많은 질문들</div>\n                <div className=\"main-question-list\">\n                    <nav className=\"q-nav\">\n                        <ul>\n                            <li>\n                                {authstate ? (\n                                    <Link to=\"tome\">\n                                        <img className=\"q_img\" src={q_tome} alt=\"\" />\n                                    </Link>\n                                ) : (\n                                    <Link to=\"login\">\n                                        <img className=\"q_img\" src={q_tome} alt=\"\" />\n                                    </Link>\n                                )}\n                            </li>\n                            <li>\n                                {authstate ? (\n                                    <Link to=\"byother\">\n                                        <img className=\"q_img\" src={q_byothers} alt=\"\" />\n                                    </Link>\n                                ) : (\n                                    <Link to=\"login\">\n                                        <img className=\"q_img\" src={q_byothers} alt=\"\" />\n                                    </Link>\n                                )}\n                            </li>\n                            <li>\n                                {authstate ? (\n                                    <Link to=\"experience\">\n                                        <img className=\"q_img\" src={q_exp} alt=\"\" />\n                                    </Link>\n                                ) : (\n                                    <Link to=\"login\">\n                                        <img className=\"q_img\" src={q_exp} alt=\"\" />\n                                    </Link>\n                                )}\n                            </li>\n                            <li>\n                                {authstate ? (\n                                    <Link to=\"refl\">\n                                        <img className=\"q_img\" src={q_ref} alt=\"\" />\n                                    </Link>\n                                ) : (\n                                    <Link to=\"login\">\n                                        <img className=\"q_img\" src={q_ref} alt=\"\" />\n                                    </Link>\n                                )}\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </section>\n            <section className=\"main-answer-container\">\n                {authstate ? (\n                    <Link to=\"profile/answer\">\n                        <h1 className=\"main-answer-header eng-title\">Answer</h1>\n                    </Link>\n                ) : (\n                    <Link to=\"login\">\n                        <h1 className=\"main-answer-header eng-title\">Answer</h1>\n                    </Link>\n                )}\n            </section>\n        </div>\n    );\n};\nexport default Main;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { LOGIN_REQUEST, CLEAR_ERROR_REQUEST } from '../../redux/types';\n\nconst Login = () => {\n    // 로그인 할 때 나타날 에러 메시지 등을 표시\n    const [localMsg, setLocalMsg] = useState('');\n    const [form, setValues] = useState({\n        email: '',\n        password: '',\n    });\n\n    // useSelector: reducer에서 상태값 가져오기\n    const { errorMsg, isAuthenticated } = useSelector(state => state.auth);\n    // dispatch : redux에 타입 (상태) 전달함으로써 상태 변화 일으키기\n    const dispatch = useDispatch();\n    // history : 회원가입 후 , login 페이지로 이동하기\n    const history = useHistory();\n\n    // errorMsg 표시 업데이트 및 로그인 완료 후 메인 페이지로 이동\n    useEffect(() => {\n        try {\n            setLocalMsg(errorMsg);\n            if (isAuthenticated) history.push('/');\n        } catch (e) {\n            console.log(e);\n        }\n    }, [errorMsg, isAuthenticated]);\n\n    useEffect(() => {\n        dispatch({\n            type: CLEAR_ERROR_REQUEST,\n        });\n    }, [dispatch, history.location]);\n\n    const onChange = e => {\n        const { name, value } = e.target;\n        dispatch({\n            type: CLEAR_ERROR_REQUEST,\n        });\n        setValues({\n            ...form,\n            [name]: value,\n        });\n        console.log(form);\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const { email, password } = form;\n        const user = { email, password };\n        console.log(`login submit: ${user.email}, ${user.password}`);\n        dispatch({\n            type: LOGIN_REQUEST,\n            // payload에 Object 형태로 전달\n            payload: user,\n        });\n    };\n\n    const onClick = e => {\n        e.preventDefault();\n        history.push('/register');\n    };\n    return (\n        <div>\n            <form onSubmit={e => onSubmit(e)}>\n                <input className=\"login-field\" id=\"email\" type=\"email\" name=\"email\" placeholder=\"이메일\" onChange={e => onChange(e)} />\n                <br />\n                <input className=\"login-field\" id=\"password\" type=\"password\" name=\"password\" placeholder=\"비밀번호\" onChange={e => onChange(e)} />\n                <br />\n                <div className=\"login-err-field\">{localMsg ? <div className=\"err-msg\">{localMsg}</div> : null}</div>\n                <input className=\"login-button lang-eng\" type=\"submit\" value=\"LogIn\" />\n            </form>\n            {/* <input className=\"login-button lang-eng\" type=\"submit\" value=\"Register\" onClick={e => onClick(e)} /> */}\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport LoginComponent from '../components/auth/Login';\n\nconst Login = () => (\n    <section className=\"login-section\">\n        <div className=\"sections-overlay login-overlay\">\n            <div className=\"login-container\">\n                <div className=\"login-tab-wrapper\">\n                    <div className=\"register-tab\">\n                        <Link className=\"register-label sub-tab lang-eng\" to=\"/Register\">\n                            SignUp\n                        </Link>\n                    </div>\n                    <div className=\"login-tab\">\n                        <h1 className=\"login-label lang-eng\">Log In</h1>\n                    </div>\n                </div>\n                <div className=\"login-form\">\n                    <div className=\"login-form-container\">\n                        <LoginComponent />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { REGISTER_FAILURE, REGISTER_REQUEST } from 'redux/types';\n\nconst Register = () => {\n    const [form, setValues] = useState({\n        userEmail: '',\n        userName: '',\n        userPassword: '',\n    });\n    const [pwCheck, setPwCheck] = useState(true);\n    // useSelector : isRegistied 현재 값을 참, 거짓 값으로 가져오기\n    const regResult = useSelector(state => state.reg.isRegistied);\n\n    // dispatch : redux에 타입 (상태) 전달함으로써 상태 변화 일으키기\n    const dispatch = useDispatch();\n    // history : 회원가입 후 , login 페이지로 이동하기\n    const history = useHistory();\n\n    const onChange = e => {\n        const { name, value } = e.target;\n        if (name === 'userPassword') {\n            const pw = value;\n            const exp = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\dd$@$!%*#?&]{8,50}$/.test(pw);\n            if (!exp) {\n                setPwCheck(false);\n            } else {\n                setPwCheck(true);\n            }\n        }\n        setValues({\n            ...form,\n            [name]: value,\n        });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const { userEmail, userName, userPassword } = form;\n        const user = { userEmail, userName, userPassword };\n        console.log(`register submit: ${user.userEmail}, ${user.userName}, ${user.userPassword}`);\n        dispatch({\n            type: REGISTER_REQUEST,\n            payload: user,\n        });\n    };\n\n    useEffect(() => {\n        console.log('Reg Render', regResult);\n        if (regResult) {\n            history.push('/login');\n            dispatch({\n                type: REGISTER_FAILURE,\n            });\n        }\n    }, [regResult]);\n\n    return (\n        <div>\n            <form onSubmit={e => onSubmit(e)}>\n                <input\n                    className=\"register-field lang-eng\"\n                    id=\"email\"\n                    type=\"email\"\n                    name=\"userEmail\"\n                    placeholder=\"이메일\"\n                    value={form.userEmail}\n                    onChange={onChange}\n                />\n                <br />\n                <input\n                    className=\"register-field lang-eng\"\n                    id=\"name\"\n                    type=\"name\"\n                    name=\"userName\"\n                    placeholder=\"별명\"\n                    value={form.userName}\n                    onChange={onChange}\n                />\n                <br />\n                <input\n                    className=\"register-field lang-eng\"\n                    id=\"password\"\n                    type=\"password\"\n                    name=\"userPassword\"\n                    placeholder=\"비밀번호\"\n                    value={form.userPassword}\n                    onChange={onChange}\n                />\n                <br />\n                <div className=\"register-err-field\">\n                    {pwCheck ? null : (\n                        <div className=\"err-msg\">\n                            적절하지 않은 형식입니다.\n                            <br />\n                            (영문+숫자+특수문자 포함 8~50자)\n                        </div>\n                    )}\n                </div>\n                <input className=\"register-button lang-eng\" type=\"submit\" value=\"Register\" disabled={!pwCheck} />\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport RegisterComponent from '../components/register/Register';\n\nconst Register = () => (\n    <section className=\"register-section\">\n        <div className=\"sections-overlay register-overlay\">\n            <div className=\"register-container\">\n                <div className=\"register-tab-wrapper\">\n                    <div className=\"login-tab\">\n                        <Link className=\"login-label sub-tab lang-eng\" to=\"/Login\">\n                            Login\n                        </Link>\n                    </div>\n                    <div className=\"register-tab\">\n                        <h1 className=\"register-label lang-eng\">Sign Up</h1>\n                    </div>\n                </div>\n                <div className=\"register-form\">\n                    <div className=\"register-form-container\">\n                        <RegisterComponent />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default Register;\n","import axios from 'axios';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst PopUp = ({ modal, setModal, FirstPageLink, routerLink }) => {\n    const history = useHistory();\n    const loadAnswer = async load => {\n        // No -> DB 오늘 답변 정보 삭제 후 detail 페이지로 이동\n        // YES -> 바로 detail 페이지로 이동\n        if (!load) {\n            const token = localStorage.getItem('token');\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                },\n            };\n            if (token) {\n                config.headers['x-auth-token'] = token;\n            }\n\n            await axios.delete(`${routerLink}`, config);\n        }\n        history.push(`${FirstPageLink}`);\n    };\n    return (\n        <>\n            {modal ? (\n                <>\n                    {console.log(modal)}\n                    <div\n                        className=\"modal-overlay\"\n                        aria-label=\"ovelay\"\n                        role=\"button\"\n                        tabIndex={0}\n                        onKeyDown={() => setModal(false)}\n                        onClick={() => setModal(false)}\n                    />\n                    <div className=\"modal\">\n                        <div className=\"popup-content\">\n                            <div>이전 답변 불러오시겠습니까?</div>\n                            <div className=\"q-byother-warning lang-kor\">\n                                1일 1개의 답변 그룹만 작성 가능{' '}\n                                <p style={{ lineHeight: '25px' }}>\n                                    <span style={{ color: 'rgb(221, 41, 41)' }}>[아니오]</span> 누를 경우 당일 작성한 답변 모두{' '}\n                                    <span style={{ color: 'rgb(221, 41, 41)' }}>초기화</span>\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"popup-button-wrap\">\n                            <button type=\"button\" onClick={() => loadAnswer(false)}>\n                                아니오\n                            </button>\n                            <button type=\"button\" onClick={() => loadAnswer(true)}>\n                                예\n                            </button>\n                        </div>\n                    </div>\n                </>\n            ) : null}\n        </>\n    );\n};\n\nexport default PopUp;\n","import axios from 'axios';\nimport PopUp from 'common/modal/PopUp';\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst QuestiontomeMain = () => {\n    const [modal, setModal] = useState(false);\n    const history = useHistory();\n    const linkObject = {\n        tomeFirstPage: `/tome/detail`,\n        tomeAnswerRecevieAll: `/api/tome/answer`,\n        tomeAnswerDeleteRouter: `/api/tome/detail/answer/delete`,\n    };\n\n    const clickEvent = async () => {\n        const token = localStorage.getItem('token');\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        if (token) {\n            config.headers['x-auth-token'] = token;\n        }\n        const result = await axios.get(`${linkObject.tomeAnswerRecevieAll}`, config);\n\n        if (result.data.length > 0) {\n            setModal(true);\n        } else if (result.data.length === 0) {\n            setModal(false);\n            history.push(`${linkObject.tomeFirstPage}`);\n        }\n    };\n    return (\n        <section className=\"sections\">\n            <div className=\"sections-overlay\">\n                <PopUp modal={modal} setModal={setModal} FirstPageLink={linkObject.tomeFirstPage} routerLink={linkObject.tomeAnswerDeleteRouter} />\n                <div className=\"q-main-container\">\n                    <div className=\"q-main-title\">\n                        <h1>내가 보는 나</h1>\n                    </div>\n                    <div className=\"q-main-content\">\n                        <div className=\"question-description lang-kor\">나 자신에게 질문하는 시간을 가져보세요.</div>\n                        <div className=\"question-time lang-kor\">\n                            예상 소요 시간 <p className=\"font-description tome-time\">5분+</p>\n                        </div>\n                        <div className=\"question-count lang-kor\">\n                            질문 수 <p className=\"font-description tome-count\">20</p>\n                        </div>\n                    </div>\n                    <div className=\"q-main-nav\">\n                        <div className=\"link-start\">\n                            <div className=\"tome-nav-item\" onClick={clickEvent} role=\"button\" tabIndex={0} onKeyDown={clickEvent}>\n                                <i className=\"fas fa-play fa-2x\" />\n                            </div>\n                            <p className=\"nav-label\">시작하기</p>\n                        </div>\n                        <div className=\"link-history\">\n                            <Link className=\"tome-nav-item\" to=\"/tome/history\">\n                                <i className=\"fas fa-history fa-2x\" />\n                            </Link>\n                            <p className=\"nav-label\">이전답변</p>\n                        </div>\n                        <div className=\"link-home\">\n                            <Link className=\"tome-nav-item\" to=\"../\">\n                                <i className=\"fas fa-home fa-2x\" />\n                            </Link>\n                            <p className=\"nav-label\">메인홈</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\nexport default QuestiontomeMain;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { TOME_REQUEST, TOME_ANSWER_RECEIVE_REQUEST, TOME_ANSWER_UPLOAD_REQUEST, TOME_INIT } from '../../redux/types';\n\nconst QuestionToMeDetail = () => {\n    const ToMeObj = useSelector(state => state.tomedetail.payload);\n    const ToMeChk = useSelector(state => state.tomedetail.isToMe);\n    const ToMeReceiveChk = useSelector(state => state.tomedetail.isToMeAnswerReceive);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // 처음렌더링 됬을때만 state에 질문들을 넣어두고,\n    // 다음 렌더링부터는 이전 답변내용을 불러온 값들이 state에 저장되어있어서 Question 객체를 따로 만듬\n    const [QuestionObj, setQuestionValues] = useState();\n    const [form, setValues] = useState({\n        question_seq: 0,\n        question_context: '',\n        question_answer: '',\n        next_button: false,\n        prev_button: true,\n        question_length: 0,\n    });\n    const [errcheck, seterrCheck] = useState(false);\n\n    // 첫 번째 useEffect는 DB에서 질문을 조회하기 위한 것\n    useEffect(() => {\n        console.log('ToMeDetail Render');\n        dispatch({\n            type: TOME_REQUEST,\n        });\n        console.log('렌더 종료', ToMeChk);\n        // 내가 보는 나 컴포넌트 종료 시, 상태값 초기화\n        return () => {\n            console.log('창 사라짐');\n            dispatch({\n                type: TOME_INIT,\n            });\n        };\n    }, []);\n\n    // 두 번째 useEffect는 첫 화면에서 첫 질문이 로딩되지 않는 이슈의 해결을 위한 것\n    useEffect(() => {\n        if (ToMeChk) {\n            setValues({\n                ...form,\n                question_context: ToMeObj.data[question_seq].question_content,\n                question_length: ToMeObj.data.length,\n            });\n        } else {\n            console.log(ToMeChk);\n        }\n        setQuestionValues(ToMeObj);\n    }, [ToMeChk]);\n\n    // 세 번째 useEffect는 질문이 바뀔 때 마다, 이전 답변내용들 DB에서 가져오기 위한 것\n    useEffect(() => {\n        console.log('ToMeDetailAnswerReceive Render');\n        const body = {\n            question_seq: question_seq + 1,\n            token: localStorage.getItem('token'),\n        };\n        dispatch({\n            type: TOME_ANSWER_RECEIVE_REQUEST,\n            payload: body,\n        });\n        console.log('ToMeReceive useEffect 발동', body);\n        console.log('상태엔 뭐가있나', ToMeObj.data);\n    }, [form.question_seq]);\n\n    // 네 번째 useEffect는 state에 저장된 답변이 잘 도착했는지 확인하는 것\n    useEffect(() => {\n        console.log('지금의 ToMeObj는?? >> ', ToMeObj.data);\n        if (ToMeObj.data !== undefined) {\n            setValues({\n                ...form,\n                question_answer: ToMeObj.data.answer_content,\n            });\n        } else {\n            setValues({\n                ...form,\n                question_answer: '',\n            });\n        }\n        /* setValues({\n            ...form,\n            question_answer: ToMeObj.data.answer_content,\n        }); */\n    }, [ToMeReceiveChk]);\n\n    const { question_seq } = form;\n\n    const onChange = e => {\n        const { value } = e.target;\n        console.log(value === ' ');\n        seterrCheck(false);\n        setValues({\n            ...form,\n            question_answer: value,\n        });\n    };\n    const next_question = e => {\n        e.preventDefault();\n        const body = {\n            question_seq: question_seq + 1,\n            answer_context: form.question_answer,\n            token: localStorage.getItem('token'),\n        };\n        if (body.answer_context.trim() !== '') {\n            console.log('trim() 테스트 >>', body.answer_context.trim());\n            console.log('trim 비어있는가?? ', body.answer_context.trim() === '');\n            dispatch({\n                type: TOME_ANSWER_UPLOAD_REQUEST,\n                payload: body,\n            });\n            console.log('잠깐 확인', QuestionObj.data);\n            setValues({\n                ...form,\n                question_seq: question_seq + 1,\n                question_context: QuestionObj.data[question_seq + 1].question_content,\n                question_answer: '',\n                next_button: false,\n                prev_button: false,\n            });\n            seterrCheck(false);\n            console.log('다음질문', form);\n        } else {\n            seterrCheck(true);\n        }\n    };\n\n    const prev_question = e => {\n        e.preventDefault();\n        const body = {\n            question_seq: question_seq + 1,\n            answer_context: form.question_answer,\n            token: localStorage.getItem('token'),\n        };\n        if (body.answer_context.trim() !== '') {\n            dispatch({\n                type: TOME_ANSWER_UPLOAD_REQUEST,\n                payload: body,\n            });\n            setValues({\n                ...form,\n                question_seq: question_seq - 1,\n                question_context: QuestionObj.data[question_seq - 1].question_content,\n                question_answer: '',\n                next_button: false,\n                prev_button: question_seq - 1 === 0,\n            });\n            seterrCheck(false);\n            console.log('이전질문', form);\n        } else {\n            seterrCheck(true);\n        }\n    };\n\n    const done = e => {\n        e.preventDefault();\n        // eslint-disable-next-line no-unused-expressions\n        const body = {\n            question_seq: question_seq + 1,\n            answer_context: form.question_answer,\n            token: localStorage.getItem('token'),\n        };\n        if (body.answer_context.trim() !== '') {\n            dispatch({\n                type: TOME_ANSWER_UPLOAD_REQUEST,\n                payload: body,\n            });\n            seterrCheck(false);\n            history.push(`/tome/done`);\n        } else {\n            seterrCheck(true);\n        }\n    };\n\n    const done_phr = (\n        <button className=\"move move-next\" type=\"button\" onClick={done} disabled={form.next_button}>\n            <i className=\"fas fa-chevron-right fa-3x\" />\n        </button>\n    );\n\n    const next_phr = (\n        <button className=\"move move-next\" type=\"button\" onClick={next_question} disabled={form.next_button}>\n            <i className=\"fas fa-chevron-right fa-3x\" />\n        </button>\n    );\n\n    const prev_phr = (\n        <button className=\"move move-pre\" type=\"button\" onClick={prev_question} disabled={form.prev_button}>\n            <i className=\"fas fa-chevron-left fa-3x\" />\n        </button>\n    );\n\n    const done_hidden_btn = (\n        <button className=\"done-hidden lang-kor\" type=\"button\" onClick={done} disabled={form.next_button}>\n            완료\n        </button>\n    );\n    const next_hidden_btn = (\n        <button className=\"next-hidden lang-kor\" type=\"button\" onClick={next_question} disabled={form.next_button}>\n            다음&nbsp;&nbsp;\n            <i className=\"fas fa-long-arrow-alt-right\" />\n        </button>\n    );\n    const prev_hidden_btn = (\n        <button className=\"prev-hidden lang-kor\" type=\"button\" onClick={prev_question} disabled={form.next_button}>\n            <i className=\"fas fa-long-arrow-alt-left\" />\n            &nbsp;&nbsp;이전\n        </button>\n    );\n\n    return (\n        <div className=\"list-container tome-list-container\">\n            {/* <div>{form.question_seq+1}. {form.question_context}</div><br/> */}\n            {/* <input onChange={onChange}  value={form.question_answer} placeholder=\"답변을 입력해 주세요\"></input> */}\n            <div className=\"move-wrap\">\n                <div className=\"list-page-count\">{`${form.question_seq + 1}`}/20</div>\n                {form.question_seq + 1 === 1 ? null : prev_phr}\n                {form.question_seq + 1 === form.question_length ? done_phr : next_phr}\n            </div>\n            <div className=\"progress-on\">\n                <div className=\"progress-bar\" style={{ width: `${((form.question_seq + 1) / 20) * 100}%`, backgroundColor: '#7b5e9e' }} />\n            </div>\n            <div className=\"tome-qna\">\n                <div className=\"tome-question-field\">\n                    <div className=\"tome-question-num\">{form.question_seq + 1}.&nbsp;</div>\n                    <div className=\"tome-question-title\">{form.question_context}</div>\n                </div>\n                <div className=\"tome-answer-field\">\n                    <input className=\"answer-input\" type=\"text\" onChange={onChange} value={form.question_answer} placeholder=\"답변을 입력해 주세요\" />\n                    {errcheck ? (\n                        <div className=\"err-wrap\">\n                            <div className=\"err-msg\">답변을 빈칸으로 채울 수 없습니다.</div>\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n            <div className=\"tome-move-hidden move-hidden\">\n                {form.question_seq + 1 === 1 ? null : prev_hidden_btn}\n                {form.question_seq + 1 === form.question_length ? done_hidden_btn : next_hidden_btn}\n            </div>\n        </div>\n    );\n};\n\nexport default QuestionToMeDetail;\n","import React from 'react';\nimport ToMeDetailComponent from '../../components/questiontome/ToMeDetail';\n\nconst QuestiontomeDetail = () => (\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <ToMeDetailComponent />\n        </div>\n    </section>\n);\n\nexport default QuestiontomeDetail;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst ToMeHistory = () => {\n    const [historydate, setHistoryDate] = useState([]);\n    const history = useHistory();\n    const loadhistory = async () => {\n        const token = localStorage.getItem('token');\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        if (token) {\n            config.headers['x-auth-token'] = token;\n        }\n        const result = await axios.get(`/api/tome/detail/history`, config);\n        console.log('히스토리 가지고 왔냐 >>', result.data);\n        return result.status === 200 ? result.data : 'error';\n        // setHistoryDate([result.data.date]);\n    };\n\n    useEffect(() => {\n        loadhistory().then(data => setHistoryDate(data));\n    }, []);\n    return (\n        <>\n            <section className=\"banner-section\" />\n            <div id=\"history-wrap\" className=\"lang-kor\">\n                <section className=\"history-container\">\n                    <div className=\"history-header\">\n                        <div className=\"history-home\">\n                            <a className=\"history-back-btn\" href=\"/tome\">\n                                <i style={{ color: 'black' }} className=\"fas fa-chevron-left fa-2x\" />\n                                <div className=\"back-label\">Back</div>\n                            </a>\n                        </div>\n                        <div className=\"history-label\">내가 보는 나</div>\n                    </div>\n                </section>\n                <section className=\"history-elem-container\">\n                    <div className=\"history-elem\">\n                        <div className=\"star\" />\n                        {historydate.length === 0 ? (\n                            <div className=\"history-err-wrap\">\n                                <div className=\"err-msg\">저장한 답변이 없습니다</div>\n                            </div>\n                        ) : null}\n                    </div>\n                    {(() =>\n                        historydate &&\n                        historydate.map(val => (\n                            <div key={val.seq} className=\"history-elem\">\n                                <div className=\"bar\" />\n                                <button\n                                    type=\"button\"\n                                    className=\"circle\"\n                                    onClick={() =>\n                                        history.push(`/profile/answer/view?type=answerbyme&year=${val.YEAR}&month=${val.MONTH}&day=${val.DAY}`)\n                                    }\n                                >\n                                    <div id=\"tome-purple-circle\" className=\"sub-circle\" />\n                                </button>\n                                <div className=\"history-desc\">\n                                    <div className=\"history-desc-title\">내가 보는 나</div>\n                                    <div className=\"history-desc-date\">{val.history}</div>\n                                </div>\n                            </div>\n                        )))()}\n                </section>\n            </div>\n        </>\n    );\n};\nexport default ToMeHistory;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ToMeDone = () => (\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <div className=\"q-main-container lang-kor\">\n                <div className=\"q-main-title\">\n                    <h1>내가 보는 나</h1>\n                </div>\n                <div className=\"q-main-content\">\n                    <div className=\"done-description\">답변이 완료되었습니다.</div>\n                </div>\n                <div className=\"q-main-nav\">\n                    <div className=\"tome-history\">\n                        <Link className=\"tome-nav-item\" to=\"/tome/history\">\n                            <i className=\"fas fa-history fa-2x\" />\n                        </Link>\n                        <p className=\"nav-label\">이전 답변</p>\n                    </div>\n                    <div className=\"tome-home\">\n                        <Link className=\"tome-nav-item\" to=\"/\">\n                            <i className=\"fas fa-home fa-2x\" />\n                        </Link>\n                        <p className=\"nav-label\">메인 홈</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default ToMeDone;\n","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport PopUp from '../../common/modal/PopUp';\n\nconst ByOtherMain = () => {\n    const [modal, setModal] = useState(false);\n    const history = useHistory();\n    const linkObject = {\n        byotherFirstPage: `/byother/detail/1`,\n        byotherRootRouter: `/api/byother`,\n        byotherAnswerDetailRouter: `/api/byother/answer/detail`,\n    };\n\n    const clickEvent = async () => {\n        const token = localStorage.getItem('token');\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        if (token) {\n            config.headers['x-auth-token'] = token;\n        }\n\n        const result = await axios.get(`${linkObject.byotherRootRouter}/answer`, config);\n\n        if (result.data.length > 0) {\n            setModal(true);\n        } else if (result.data.length === 0) {\n            setModal(false);\n            history.push(`${linkObject.byotherFirstPage}`);\n        }\n    };\n    return (\n        <section className=\"sections\">\n            <div className=\"sections-overlay\">\n                <PopUp\n                    modal={modal}\n                    setModal={setModal}\n                    FirstPageLink={linkObject.byotherFirstPage}\n                    routerLink={linkObject.byotherAnswerDetailRouter}\n                />\n                <div className=\"q-main-container\">\n                    <div className=\"q-main-title\">\n                        <h1>남이 보는 나</h1>\n                    </div>\n                    <div className=\"q-main-content\">\n                        <div className=\"question-description lang-kor\">지금 곁에 있는 다른 이에게 질문하세요.</div>\n                        <div className=\"question-time lang-kor\">\n                            예상 소요 시간 <p className=\"font-description byother-time\">5분+</p>\n                        </div>\n                        <div className=\"question-count lang-kor\">\n                            질문 수 <p className=\"font-description byother-count\">15</p>\n                        </div>\n                    </div>\n                    <div className=\"q-main-nav\">\n                        <div className=\"link-start\">\n                            <div className=\"byother-nav-item\" onClick={clickEvent} role=\"button\" tabIndex={0} onKeyDown={clickEvent}>\n                                <i className=\"fas fa-play fa-2x\" />\n                            </div>\n                            <div className=\"nav-label\">시작하기</div>\n                        </div>\n                        <div className=\"link-history\">\n                            <Link className=\"byother-nav-item\" to=\"/byother/history\">\n                                <i className=\"fas fa-history fa-2x\" />\n                            </Link>\n                            <div className=\"nav-label\">이전답변</div>\n                        </div>\n                        <div className=\"link-home\">\n                            <Link className=\"byother-nav-item\" to=\"/\">\n                                <i className=\"fas fa-home fa-2x\" />\n                            </Link>\n                            <div className=\"nav-label\">메인홈</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default ByOtherMain;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BYOTHER_UPLOAD_REQUEST, BYOTHER_ANSWER_LOADING_REQUEST, BYOTHER_DETAIL_DELETE_REQUEST } from '../../redux/types';\n\nconst ByOtherQuestion = ({ req }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // 현재 페이지 번호\n    const [currentPage, setCurrentPage] = useState(parseInt(req.match.params.id, 10));\n    // 질문 총 개수 (= 페이지 개수)\n    const [total, setTotal] = useState(0);\n    // 질문\n    const [questionContent, setQuestionContent] = useState('');\n    // 답변\n    const [answerContent, setAnswerContent] = useState('');\n    // 불러온 이전 답변\n    const { answer } = useSelector(state => state.byother);\n    // input 변경 여부\n    const [inputChange, setInputChange] = useState(false);\n\n    const [inputEmptyError, setInputEmptyError] = useState(false);\n\n    // 질문 불러오기 API\n    const getQuestionAPI = async page => {\n        try {\n            console.log('질문 LOAD');\n            // 질문 총 개수 가져와서 state 업데이트\n            const questionTotal = await axios.get(`/api/byother/detail`);\n            setTotal(questionTotal.data.length);\n            // 표시할 질문 가져와서 return\n            const res = await axios.get(`/api/byother/detail/${page}`);\n            return res.status === 200 ? res.data : 'error';\n        } catch (err) {\n            return err;\n        }\n    };\n\n    // 답변 불러오기 API\n    const postAnswer = page => {\n        console.log('답변 LOAD');\n        const token = localStorage.getItem('token');\n\n        const body = { page, token };\n        dispatch({\n            type: BYOTHER_ANSWER_LOADING_REQUEST,\n            payload: body,\n        });\n    };\n\n    useEffect(() => {\n        console.log('페이지 이동');\n        history.push(`/byother/detail/${currentPage}`);\n        // 질문 불러오기 API 실행 => return 값으로 questionContent state 업데이트\n        getQuestionAPI(currentPage).then(data => setQuestionContent(data));\n        // 답변 불러오기 API 실행\n        postAnswer(currentPage);\n        if (answer === '') setAnswerContent('');\n    }, [currentPage]);\n\n    useEffect(() => {\n        setAnswerContent(answer);\n    }, [answer]);\n\n    // 인풋 필드 변경\n    const onChange = e => {\n        const { value } = e.target;\n        // 인풋창의 value 값으로 answerContent state 업데이트\n        setAnswerContent(value);\n        setInputEmptyError(false);\n        setInputChange(true);\n    };\n\n    // 이전, 다음 버튼 클릭\n    const onClickEvent = name => {\n        console.log('버튼 Click', name, currentPage);\n        // 입력된 답변이 있으면\n        if (answerContent.trim() !== '') {\n            const body = {\n                page: currentPage,\n                answerData: answerContent,\n                token: localStorage.getItem('token'),\n            };\n\n            dispatch({\n                type: BYOTHER_UPLOAD_REQUEST,\n                payload: body,\n            });\n            if (name === 'prev') {\n                if (currentPage > 1) {\n                    // 이전 페이지로 state 업데이트\n                    setCurrentPage(currentPage - 1);\n                }\n            } else if (name === 'next') {\n                if (currentPage < total) {\n                    console.log('next');\n                    // 다음 페이지 state 업데이트\n                    setCurrentPage(currentPage + 1);\n                }\n            } else if (name === 'finish') {\n                history.push('/byother/done');\n            }\n        } else if (inputChange && (answerContent.trim() === '' || answerContent === null)) {\n            // 답변을 수정했는데 빈 답변이라면 DB에서 삭제\n            const body = {\n                page: currentPage,\n                token: localStorage.getItem('token'),\n            };\n            dispatch({\n                type: BYOTHER_DETAIL_DELETE_REQUEST,\n                payload: body,\n            });\n            setInputEmptyError(true);\n        } else if (!inputChange && (answerContent.trim() === '' || answerContent === null)) {\n            // 다음 질문으로 넘어간 뒤 (빈칸인 상태) 바로 이전 질문으로 이동할 경우 예외 처리\n            setInputEmptyError(true);\n        }\n\n        setInputChange(false);\n    };\n\n    // 이동 버튼\n    function renderBottomNav() {\n        if (currentPage === total) {\n            return (\n                <>\n                    <button className=\"move move-pre\" type=\"button\" onClick={() => onClickEvent('prev')}>\n                        <i className=\"fas fa-chevron-left fa-3x\" />\n                    </button>\n                    <button className=\"move move-finish\" type=\"button\" onClick={() => onClickEvent('finish')}>\n                        <i className=\"fas fa-check fa-3x\" />\n                    </button>\n                </>\n            );\n        }\n        if (currentPage === 1) {\n            return (\n                <>\n                    <button className=\"move move-next\" type=\"button\" onClick={() => onClickEvent('next')}>\n                        <i className=\"fas fa-chevron-right fa-3x\" />\n                    </button>\n                </>\n            );\n        }\n        return (\n            <>\n                <button className=\"move move-pre\" type=\"button\" onClick={() => onClickEvent('prev')}>\n                    <i className=\"fas fa-chevron-left fa-3x\" />\n                </button>\n                <button className=\"move move-next\" type=\"button\" onClick={() => onClickEvent('next')}>\n                    <i className=\"fas fa-chevron-right fa-3x\" />\n                </button>\n            </>\n        );\n    }\n\n    function renderResponsiveNav() {\n        if (currentPage === total) {\n            return (\n                <>\n                    <button className=\"prev-hidden\" type=\"button\" onClick={() => onClickEvent('prev')}>\n                        <i className=\"fas fa-long-arrow-alt-left\" />\n                        &nbsp;&nbsp;이전\n                    </button>\n                    <button className=\"done-hidden\" type=\"button\" onClick={() => onClickEvent('finish')}>\n                        완료\n                    </button>\n                </>\n            );\n        }\n        if (currentPage === 1) {\n            return (\n                <>\n                    <button className=\"next-hidden\" type=\"button\" onClick={() => onClickEvent('next')}>\n                        다음&nbsp;&nbsp;\n                        <i className=\"fas fa-long-arrow-alt-right\" />\n                    </button>\n                </>\n            );\n        }\n        return (\n            <>\n                <button className=\"prev-hidden\" type=\"button\" onClick={() => onClickEvent('prev')}>\n                    <i className=\"fas fa-long-arrow-alt-left\" />\n                    &nbsp;&nbsp;이전\n                </button>\n                <button className=\"next-hidden\" type=\"button\" onClick={() => onClickEvent('next')}>\n                    다음&nbsp;&nbsp;\n                    <i className=\"fas fa-long-arrow-alt-right\" />\n                </button>\n            </>\n        );\n    }\n\n    const Body = (\n        <>\n            {(() => (\n                <div className=\"list-container byother-list-container\">\n                    <div className=\"move-wrap\">\n                        <div className=\"list-page-count\">\n                            {questionContent.other_question_seq}/{total}\n                        </div>\n                        {renderBottomNav()}\n                    </div>\n                    <div className=\"progress-on\">\n                        <div\n                            className=\"progress-bar\"\n                            style={{ width: `${(questionContent.other_question_seq / total) * 100}%`, backgroundColor: 'var(--color-main-blue)' }}\n                        />\n                    </div>\n                    <div className=\"byother-qna\">\n                        <div className=\"byother-question-field\">\n                            <div className=\"byother-question-num\">{questionContent !== '' && questionContent.other_question_seq}.&nbsp;</div>\n                            <div className=\"byother-question-title lang-kor\">{questionContent !== '' && questionContent.other_question_content}</div>\n                        </div>\n                        <div className=\"byother-answer-field\">\n                            <input\n                                className=\"answer-input lang-kor\"\n                                type=\"text\"\n                                value={answerContent}\n                                onChange={onChange}\n                                placeholder=\"답변을 입력해주세요\"\n                            />\n                        </div>\n                        {inputEmptyError ? (\n                            <div className=\"err-wrap\">\n                                <div className=\"err-msg\">답변을 빈칸으로 채울 수 없습니다.</div>\n                            </div>\n                        ) : null}\n                    </div>\n                    <div className=\"byother-move-hidden move-hidden\">{renderResponsiveNav()}</div>\n                </div>\n            ))()}\n        </>\n    );\n\n    return <>{Body}</>;\n};\n\nexport default ByOtherQuestion;\n","import React from 'react';\n\nimport ByOtherQuestion from '../../components/byother/ByOtherQuetion';\n\nconst ByOtherDetail = req => (\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <ByOtherQuestion req={req} />\n        </div>\n    </section>\n);\n\nexport default ByOtherDetail;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst ByOtherDone = () => (\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <div className=\"q-main-container byother-container lang-kor\">\n                <div className=\"byother-title\">\n                    <h1>남이 보는 나</h1>\n                </div>\n                <div className=\"q-main-content byother-content\">\n                    <div className=\"done-description\">답변이 완료되었습니다</div>\n                </div>\n                <div className=\"q-main-nav byother-footer\">\n                    <div className=\"byother-history\">\n                        <Link className=\"byother-nav-item\" to=\"/byother/history\">\n                            <i className=\"fas fa-history fa-2x\" />\n                        </Link>\n                        <div className=\"nav-label\">이전 답변</div>\n                    </div>\n                    <div className=\"byother-home\">\n                        <Link className=\"byother-nav-item\" to=\"/\">\n                            <i className=\"fas fa-home fa-2x\" />\n                        </Link>\n                        <div className=\"nav-label\">메인홈</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default ByOtherDone;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ByOtherHistory = () => {\n    const [historydate, setHistoryDate] = useState([]);\n    const history = useHistory();\n\n    const getHistoryAPI = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            const config = {\n                headers: {\n                    'Content-type': 'application/json',\n                },\n            };\n            if (token) {\n                config.headers['x-auth-token'] = token;\n            }\n\n            const res = await axios.get('/api/byother/history', config);\n            return res.status === 200 ? res.data : 'error';\n        } catch (err) {\n            return err;\n        }\n    };\n    useEffect(() => {\n        getHistoryAPI().then(data => setHistoryDate(data));\n    }, []);\n    return (\n        <>\n            <section className=\"banner-section\" />\n            <div id=\"history-wrap\" className=\"lang-kor\">\n                <section className=\"history-container\">\n                    <div className=\"history-header\">\n                        <div className=\"history-home\">\n                            <Link className=\"history-back-btn\" to=\"/byother\">\n                                <i style={{ color: 'black' }} className=\"fas fa-chevron-left fa-2x\" />\n                                <div className=\"back-label\">Back</div>\n                            </Link>\n                        </div>\n                        <div className=\"history-label lang-kor\">남이 보는 나</div>\n                    </div>\n                </section>\n                <section className=\"history-elem-container\">\n                    <div className=\"history-elem\">\n                        <div className=\"star\" />\n                        {historydate.length === 0 ? (\n                            <div className=\"history-err-wrap\">\n                                <div className=\"err-msg\">저장한 답변이 없습니다</div>\n                            </div>\n                        ) : null}\n                    </div>\n                    {(() =>\n                        historydate &&\n                        historydate.map(val => (\n                            <div key={val.seq} className=\"history-elem\">\n                                <div className=\"bar\" />\n                                <button\n                                    type=\"button\"\n                                    className=\"circle\"\n                                    onClick={() =>\n                                        history.push(`/profile/answer/view?type=answerbyothers&year=${val.YEAR}&month=${val.MONTH}&day=${val.DAY}`)\n                                    }\n                                >\n                                    <div id=\"byothers-blue-circle\" className=\"sub-circle\" />\n                                </button>\n                                <div className=\"history-desc\">\n                                    <div className=\"history-desc-title lang-kor\">남이 보는 나</div>\n                                    <div className=\"history-desc-date lang-kor\">{val.history}</div>\n                                </div>\n                            </div>\n                        )))()}\n                </section>\n            </div>\n        </>\n    );\n};\n\nexport default ByOtherHistory;\n","import axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { EXPERIENCE_LOAD_REQUEST } from 'redux/types';\n\nlet script = null;\nconst experienceMain = () => {\n    const { userName } = useSelector(state => state.auth);\n    const { isUploaded } = useSelector(state => state.experience);\n    const dispatch = useDispatch();\n    useEffect(async () => {\n        const token = localStorage.getItem('token');\n        dispatch({\n            type: EXPERIENCE_LOAD_REQUEST,\n            payload: token,\n        });\n        console.log('Main에서의 isUploaded', isUploaded);\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        if (token) {\n            config.headers['x-auth-token'] = token;\n        }\n        const result = await axios.get('api/experience', config);\n\n        const ObjectArray = [];\n        if (result.data.length === 0) {\n            ObjectArray.push({\n                headline: 'The Main Timeline Headline Goes here',\n                startDate: '0000,00,00',\n                text: '경험을 추가해주세요',\n            });\n        } else {\n            result.data.forEach(val => {\n                if (val.endDate === '0000,00,00') {\n                    ObjectArray.push({\n                        startDate: `${val.startDate}`,\n                        headline: `${val.headline}`,\n                        classname: `${val.classname}`,\n                        text: `${val.text}`,\n                    });\n                    // eraArray.push({\n                    //     startDate: `${val.startDate}`,\n                    //     headline: `${val.headline}`,\n                    //     text: `${val.text}`,\n                    // });\n                } else {\n                    ObjectArray.push({\n                        startDate: `${val.startDate}`,\n                        endDate: `${val.endDate}`,\n                        headline: `${val.headline}`,\n                        classname: `${val.classname}`,\n                        text: `${val.text}`,\n                    });\n                    // eraArray.push({\n                    //     startDate: `${val.startDate}`,\n                    //     endDate: `${val.endDate}`,\n                    //     headline: `${val.headline}`,\n                    //     text: `${val.text}`,\n                    // });\n                }\n            });\n        }\n\n        console.log(ObjectArray);\n        const dataObject = {\n            timeline: {\n                headline: '표지',\n                type: 'default',\n                text: 'hi!',\n                date: ObjectArray,\n            },\n        };\n\n        console.log(dataObject);\n        script = document.createElement('script');\n\n        console.log(document);\n        script.text = `\n          $(document).ready(() => {\n            createStoryJS({\n                type: 'timeline',\n                width: '100%',\n                height: '100%',\n                lang:'ko',\n                font:'PlayfairDisplay-Muli',\n                start_zoom_adjust:'0',\t\n                start_at_end: true,\n                source: ${JSON.stringify(dataObject)},\n                embed_id: 'timeline-embed',\n            });\n          });`;\n        if (script !== null) document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    return (\n        <section className=\"sections\">\n            <div className=\"sections-overlay\">\n                <div className=\"exp-container\">\n                    <div className=\"exp-header\">\n                        <h1>{`\"${userName}\"`}님의 경험</h1>\n                    </div>\n                    <div className=\"exp-content\">\n                        <div id=\"timeline-embed\" />\n                        <script type=\"text/javascript\" src=\"https://cdn.knightlab.com/libs/timeline/latest/js/storyjs-embed.js\" />\n                    </div>\n                    <div className=\"exp-footer\">\n                        <div className=\"exp-start\">\n                            <Link className=\"exp-button\" to=\"/experience/form\">\n                                경험 추가\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default experienceMain;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { EXPERIENCE_UPLOAD_REQUEST, EXPR_CLEAR_ERROR_REQUEST } from 'redux/types';\n\nconst ExperienceForm = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [localMsg, setLocalMsg] = useState('');\n    const [isChecked, setIsChecked] = useState(false);\n    const { errorMsg, isUploaded } = useSelector(state => state.experience);\n    const [form, setValues] = useState({\n        headline: '',\n        text: '',\n        startDate: '',\n        endDate: '',\n    });\n    const handleChange = e => {\n        const { name, value } = e.target;\n        dispatch({\n            type: EXPR_CLEAR_ERROR_REQUEST,\n        });\n        setValues({\n            ...form,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = () => {\n        const token = localStorage.getItem('token');\n        const { headline, text, startDate, endDate } = form;\n\n        const body = { headline, text, startDate, endDate, token };\n\n        dispatch({\n            type: EXPERIENCE_UPLOAD_REQUEST,\n            payload: body,\n        });\n        // history.push('/experience/done');\n    };\n\n    useEffect(() => {\n        console.log('errorMsg => ', errorMsg);\n        console.log('isUploaded => ', isUploaded);\n    }, [errorMsg, isUploaded]);\n\n    useEffect(() => {\n        try {\n            setLocalMsg(errorMsg);\n            if (isUploaded) history.push('/experience/done');\n        } catch (e) {\n            console.log(e);\n        }\n    }, [errorMsg, isUploaded]);\n\n    useEffect(() => {\n        dispatch({\n            type: EXPR_CLEAR_ERROR_REQUEST,\n        });\n    }, [dispatch, history.location]);\n\n    const handleChecked = event => {\n        console.log('기간 체크 => ', isChecked);\n        setIsChecked(event.target.checked);\n    };\n\n    return (\n        <form className=\"expr-elem expr-content lang-kor\">\n            <div className=\"expr-headline \">\n                <i className=\"fas fa-bars\" /> 제목*\n                <input\n                    className=\"input-field\"\n                    name=\"headline\"\n                    id=\"headline\"\n                    type=\"text\"\n                    placeholder=\"title\"\n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                />\n            </div>\n            <div className=\"expr-text\">\n                <i className=\"fas fa-bars\" /> 세부내용\n                <textarea className=\"input-field\" name=\"text\" id=\"text\" cols=\"100%\" rows=\"5\" onChange={handleChange} />\n            </div>\n            <div className=\"expr-date\">\n                <i className=\"fas fa-bars\" /> 날짜*\n                <div className=\"input-field date-input\">\n                    <div>\n                        <input type=\"date\" name=\"startDate\" id=\"startDate\" onChange={handleChange} />\n                    </div>\n                    {isChecked ? (\n                        <div>\n                            ~\n                            <input type=\"date\" name=\"endDate\" id=\"endDate\" onChange={handleChange} />\n                        </div>\n                    ) : null}\n                    <div>\n                        <input type=\"checkbox\" checked={isChecked} onChange={handleChecked} /> 기간\n                    </div>\n                </div>\n            </div>\n            {/* <div className=\"expr-theme\">\n                <div className=\"lang-kor\">\n                    <i className=\"fas fa-bars\" /> 주제\n                </div>\n                <div className=\"input-field theme theme-input\">\n                    <input className=\"input-field lang-kor\" type=\"text\" placeholder=\"#을 이용하여 태그를 작성하세요!\" onChange={e => onChange(e)} />\n                </div>\n            </div> */}\n            {/* <div className=\"expr-file\">\n                <div className=\"lang-kor\">\n                    <i className=\"fas fa-bars\" /> 첨부파일\n                </div>\n                <div className=\"file-wrapper\">\n                    <div\n                        className=\"file-input\"\n                        onClick={() => console.log('file1')}\n                        role=\"button\"\n                        tabIndex={0}\n                        onKeyDown={() => console.log('file1')}\n                    >\n                        <i className=\"fas fa-plus\" />\n                    </div>\n                    <div\n                        className=\"file-input\"\n                        onClick={() => console.log('file2')}\n                        role=\"button\"\n                        tabIndex={0}\n                        onKeyDown={() => console.log('file2')}\n                    >\n                        <i className=\"fas fa-plus\" />\n                    </div>\n                    <div\n                        className=\"file-input\"\n                        onClick={() => console.log('file3')}\n                        role=\"button\"\n                        tabIndex={0}\n                        onKeyDown={() => console.log('file3')}\n                    >\n                        <i className=\"fas fa-plus\" />\n                    </div>\n                    <div\n                        className=\"file-input\"\n                        onClick={() => console.log('file4')}\n                        role=\"button\"\n                        tabIndex={0}\n                        onKeyDown={() => console.log('file4')}\n                    >\n                        <i className=\"fas fa-plus\" />\n                    </div>\n                </div>\n            </div> */}\n            {/* <div className=\"expr-link\">\n                <div className=\"lang-kor\">\n                    <i className=\"fas fa-bars\" /> 링크\n                </div>\n                <div className=\"input-field link-input\">\n                    <input className=\"input-field lang-kor\" name=\"link\" id=\"link\" type=\"text\" onChange={e => onChange(e)} />\n                </div>\n            </div> */}\n            {localMsg ? <div style={{ color: 'red' }}>{localMsg}</div> : null}\n\n            <button\n                label=\"submit\"\n                type=\"button\"\n                className=\"save-btn expr-add-btn\"\n                onClick={() => {\n                    handleSubmit();\n                    return false;\n                }}\n            >\n                저장하기\n            </button>\n        </form>\n    );\n};\n\nexport default ExperienceForm;\n","import React from 'react';\nimport ExperienceForm from '../../components/experience/ExperienceForm';\n\nconst experienceForm = () => (\n    // 날짜, 주제, 첨부파일, 링크 등 제목, 내용 적고 저장 하면 저장되고 구글 스프레드 시트에 띄워짐\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <div className=\"expr-wrap\">\n                {/* <div className=\"expr-elem expr-header\">나의 경험</div> */}\n                <ExperienceForm />\n            </div>\n        </div>\n    </section>\n);\n\nexport default experienceForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst experienceDone = () => (\n    // 경험이 저장되었습니다 와 함께 nav\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <div className=\"q-main-container expr-done-container\">\n                <div className=\"q-main-title expr-done-title\">\n                    <h1>내가 한 경험</h1>\n                </div>\n                <div className=\"q-main-content\">\n                    <div className=\"done-description\">경험이 저장되었습니다</div>\n                </div>\n                <div className=\"expr-done-btns\">\n                    <div className=\"expr-start\">\n                        <Link className=\"expr-nav-item\" to=\"/experience\">\n                            <i className=\"fas fa-play fa-2x\" />\n                        </Link>\n                        <div className=\"nav-label\">타임 라인</div>\n                    </div>\n                    <div className=\"tome-home\">\n                        <Link className=\"expr-nav-item\" to=\"/\">\n                            <i className=\"fas fa-home fa-2x\" />\n                        </Link>\n                        <div className=\"nav-label\">메인홈</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default experienceDone;\n","/* eslint-disable react/no-unescaped-entities */\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst ReflectionMain = () => {\n    const [reflcheck, setCheck] = useState(false);\n    const history = useHistory();\n    const linkObject = {\n        reflFirstPage: `/refl/detail`,\n        reflAnswerRecevieAll: `/api/refl/answer`,\n    };\n    const clickEvent = () => {\n        history.push(`${linkObject.reflFirstPage}`);\n    };\n    const checkanswer = async () => {\n        const token = localStorage.getItem('token');\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        if (token) {\n            config.headers['x-auth-token'] = token;\n        }\n        const result = await axios.get(`${linkObject.reflAnswerRecevieAll}`, config);\n\n        if (result.data.length > 0) {\n            setCheck(true);\n        } else if (result.data.length === 0) {\n            setCheck(false);\n        }\n    };\n    // 성찰 답변 DB 에 데이터가 있는지 없는지 확인 하는 것\n    useEffect(checkanswer, []);\n    return (\n        <section className=\"sections\">\n            <div className=\"sections-overlay\">\n                <div className=\"q-main-container\">\n                    <div className=\"q-main-title\">\n                        <h1>성찰</h1>\n                    </div>\n                    <div className=\"q-main-content\">\n                        <div className=\"question-description lang-kor\">살아가면서 마주할 질문에 답해보세요</div>\n                        <div className=\"reflection-description lang-kor\">하루에 단 1개의 질문만 답변 가능합니다</div>\n                        <div className=\"reflection-description lang-kor\">답변 작성 후, 수정은 불가능하니 신중하게 답변해주세요</div>\n                    </div>\n                    <div className=\"q-main-nav reflection-nav\">\n                        {reflcheck ? null : (\n                            <div className=\"link-start\">\n                                <div className=\"refl-nav-item\" onClick={clickEvent} role=\"button\" tabIndex={0} onKeyDown={clickEvent}>\n                                    <i className=\"fas fa-play fa-2x\" />\n                                </div>\n                                <p className=\"nav-label\">시작하기</p>\n                            </div>\n                        )}\n                        <div className=\"link-history\">\n                            <Link className=\"refl-nav-item\" to=\"/refl/history\">\n                                <i className=\"fas fa-history fa-2x\" />\n                                {/* <button>이전 답변보기</button> */}\n                            </Link>\n                            <p className=\"nav-label\">이전답변</p>\n                        </div>\n                        <div className=\"link-home\">\n                            <Link className=\"refl-nav-item\" to=\"../\">\n                                <i className=\"fas fa-home fa-2x\" />\n                                {/* <button>홈으로 돌아가기</button> */}\n                            </Link>\n                            <p className=\"nav-label\">메인홈</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\nexport default ReflectionMain;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { REFL_REQUEST, REFL_ANSWER_RECEIVE_REQUEST, REFL_ANSWER_UPLOAD_REQUEST, REFL_INIT } from '../../redux/types';\n\nconst ReflectionDetail = () => {\n    const ReflObj = useSelector(state => state.refl.payload);\n    const ReflChk = useSelector(state => state.refl.isRefl);\n    const ReflReceiveChk = useSelector(state => state.refl.isReflAnswerReceive);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // 처음렌더링 됬을때만 state에 질문들을 넣어두고,\n    // 다음 렌더링부터는 이전 답변내용을 불러온 값들이 state에 저장되어있어서 Question 객체를 따로 만듬\n    const [form, setValues] = useState({\n        question_seq: 0,\n        question_context: '',\n        question_answer: '',\n        next_button: false,\n        prev_button: true,\n        question_length: 0,\n    });\n    const [errcheck, seterrCheck] = useState(false);\n\n    // 첫 번째 useEffect는 DB에서 질문을 조회하기 위한 것\n    useEffect(() => {\n        console.log('REFLDetail Render');\n        dispatch({\n            type: REFL_REQUEST,\n        });\n        console.log('렌더 종료', ReflChk);\n        // 내가 보는 나 컴포넌트 종료 시, 상태값 초기화\n        return () => {\n            console.log('창 사라짐');\n            dispatch({\n                type: REFL_INIT,\n            });\n        };\n    }, []);\n\n    // 두 번째 useEffect는 첫 화면에서 첫 질문이 로딩되지 않는 이슈의 해결을 위한 것\n    useEffect(() => {\n        if (ReflChk) {\n            const randindex = Math.floor(Math.random() * (ReflObj.data.length - 1 - 0) + 0);\n            console.log('랜덤 넘버 -> ', randindex);\n            setValues({\n                ...form,\n                question_seq: randindex,\n                question_context: ReflObj.data[randindex].refl_content,\n                question_length: ReflObj.data.length,\n            });\n        } else {\n            console.log(ReflChk);\n        }\n        console.log('질문 불러오기 테스트 >> ', ReflObj);\n    }, [ReflChk]);\n\n    // 세 번째 useEffect는 질문이 바뀔 때 마다, 이전 답변내용들 DB에서 가져오기 위한 것\n    useEffect(() => {\n        console.log('REFLDetailAnswerReceive Render');\n        const body = {\n            question_seq: question_seq + 1,\n            token: localStorage.getItem('token'),\n        };\n        dispatch({\n            type: REFL_ANSWER_RECEIVE_REQUEST,\n            payload: body,\n        });\n        console.log('REFLReceive useEffect 발동', body);\n        console.log('상태엔 뭐가있나', ReflObj.data);\n    }, [form.question_seq]);\n\n    // 네 번째 useEffect는 state에 저장된 답변이 잘 도착했는지 확인하는 것\n    useEffect(() => {\n        console.log('지금의 REFLObj는?? >> ', ReflObj.data);\n        if (ReflObj.data !== undefined) {\n            setValues({\n                ...form,\n                question_answer: ReflObj.data.refl_answer_content,\n            });\n        } else {\n            setValues({\n                ...form,\n                question_answer: '',\n            });\n        }\n        /* setValues({\n            ...form,\n            question_answer: ToMeObj.data.answer_content,\n        }); */\n    }, [ReflReceiveChk]);\n\n    const { question_seq } = form;\n\n    const onChange = e => {\n        const { value } = e.target;\n        console.log(value);\n        seterrCheck(false);\n        setValues({\n            ...form,\n            question_answer: value,\n        });\n    };\n\n    const done = e => {\n        e.preventDefault();\n        // eslint-disable-next-line no-unused-expressions\n        const body = {\n            question_seq: question_seq + 1,\n            answer_context: form.question_answer,\n            token: localStorage.getItem('token'),\n        };\n        if (body.answer_context.trim() !== '') {\n            dispatch({\n                type: REFL_ANSWER_UPLOAD_REQUEST,\n                payload: body,\n            });\n            seterrCheck(false);\n            history.push(`/refl/done`);\n        } else {\n            seterrCheck(true);\n        }\n    };\n\n    const done_phr = (\n        <button className=\"move move-next\" type=\"button\" onClick={done} disabled={form.next_button}>\n            <i className=\"fas fa-chevron-right fa-3x\" />\n        </button>\n    );\n\n    const done_hidden_btn = (\n        <button className=\"done-hidden\" type=\"button\" onClick={done} disabled={form.next_button}>\n            작성 완료\n        </button>\n    );\n\n    return (\n        <div className=\"list-container tome-list-container lang-kor\">\n            <div className=\"move-wrap\">{done_phr}</div>\n            <div className=\"tome-qna\">\n                <div className=\"tome-question-field\">\n                    <div className=\"tome-question-title\">{form.question_context}</div>\n                </div>\n                <div className=\"tome-answer-field\">\n                    <input className=\"answer-input\" type=\"text\" onChange={onChange} value={form.question_answer} placeholder=\"답변을 입력해 주세요\" />\n                    {errcheck ? (\n                        <div className=\"err-wrap\">\n                            <div className=\"err-msg\">답변을 빈칸으로 채울 수 없습니다.</div>\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n            <div className=\"refl-move-hidden move-hidden\">{done_hidden_btn}</div>\n        </div>\n    );\n};\n\nexport default ReflectionDetail;\n","import React from 'react';\nimport ReflectionDetailComponent from '../../components/reflection/reflectionDetail';\n\nconst ReflectiontomeDetail = () => (\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <ReflectionDetailComponent />\n        </div>\n    </section>\n);\n\nexport default ReflectiontomeDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ReflectionDone = () => (\n    <section className=\"sections\">\n        <div className=\"sections-overlay\">\n            <div className=\"q-main-container lang-kor\">\n                <div className=\"q-main-title\">\n                    <h1>성찰</h1>\n                </div>\n                <div className=\"q-main-content\">\n                    <div className=\"done-description\">답변이 완료되었습니다.</div>\n                </div>\n                <div className=\"q-main-nav\">\n                    <div className=\"refl-history\">\n                        <Link className=\"refl-nav-item\" to=\"/refl/history\">\n                            <i className=\"fas fa-history fa-2x\" />\n                        </Link>\n                        <p className=\"nav-label\">이전답변</p>\n                    </div>\n                    <div className=\"refl-home\">\n                        <Link className=\"refl-nav-item\" to=\"/\">\n                            <i className=\"fas fa-home fa-2x\" />\n                        </Link>\n                        <div className=\"nav-label\">메인홈</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n);\n\nexport default ReflectionDone;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst ReflectionHistory = () => {\n    const [historydate, setHistoryDate] = useState([]);\n    const history = useHistory();\n    const loadhistory = async () => {\n        const token = localStorage.getItem('token');\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        if (token) {\n            config.headers['x-auth-token'] = token;\n        }\n        const result = await axios.get(`/api/refl/detail/history`, config);\n        console.log('히스토리 가지고 왔냐 >>', result.data);\n        return result.status === 200 ? result.data : 'error';\n        // setHistoryDate([result.data.date]);\n    };\n\n    useEffect(() => {\n        loadhistory().then(data => setHistoryDate(data));\n    }, []);\n    return (\n        <>\n            <section className=\"banner-section\" />\n            <div id=\"history-wrap\" className=\"lang-kor\">\n                <section className=\"history-container \">\n                    <div className=\"history-header\">\n                        <div className=\"history-home\">\n                            <a className=\"history-back-btn\" href=\"/refl\">\n                                <i style={{ color: 'black' }} className=\"fas fa-chevron-left fa-2x\" />\n                                <div className=\"back-label\">Back</div>\n                            </a>\n                        </div>\n                        <div className=\"history-label\">인생의 성찰</div>\n                    </div>\n                </section>\n                <section className=\"history-elem-container\">\n                    <div className=\"history-elem\">\n                        <div className=\"star\" />\n                        {historydate.length === 0 ? (\n                            <div className=\"history-err-wrap\">\n                                <div className=\"err-msg\">저장한 답변이 없습니다</div>\n                            </div>\n                        ) : null}\n                    </div>\n                    {(() =>\n                        historydate &&\n                        historydate.map(val => (\n                            <div key={val.seq} className=\"history-elem\">\n                                <div className=\"bar\" />\n                                <button\n                                    type=\"button\"\n                                    className=\"circle\"\n                                    onClick={() =>\n                                        history.push(`/profile/answer/view?type=answerforrefl&year=${val.YEAR}&month=${val.MONTH}&day=${val.DAY}`)\n                                    }\n                                >\n                                    <div id=\"refl-orange-circle\" className=\"sub-circle\" />\n                                </button>\n                                <div className=\"history-desc\">\n                                    <div className=\"history-desc-title\">성찰</div>\n                                    <div className=\"history-desc-date\">{val.history}</div>\n                                </div>\n                            </div>\n                        )))()}\n                </section>\n            </div>\n        </>\n    );\n};\nexport default ReflectionHistory;\n","import React from 'react';\n\nconst AccountModal = ({ modalMsg, setShowModal, setModalMsg }) => (\n    <div className=\"account-modal-overlay lang-kor\">\n        <div className=\"account-modal-wrap\">\n            {modalMsg === '' ? (\n                <>\n                    <div className=\"account-modal-header\">이미지 업로드 성공!</div>\n                    <div className=\"account-modal-content\">이미지가 성공적으로 업로드 되었습니다.</div>\n                </>\n            ) : (\n                <>\n                    <div className=\"account-modal-header\">이미지 업로드 실패</div>\n                    <div className=\"account-modal-content\">{modalMsg}</div>\n                </>\n            )}\n            <button\n                type=\"button\"\n                onClick={() => {\n                    setModalMsg('');\n                    setShowModal(false);\n                }}\n                className=\"account-modal-button\"\n            >\n                확인\n            </button>\n        </div>\n    </div>\n);\n\nexport default AccountModal;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { MYAC_RECEIVE_REQUEST, MYAC_SEND_PREVPW_REQUEST, MYAC_UPDATE_REQUEST, MYAC_INIT, MYAC_PROFILE_IMAGE_UPDATE_REQUEST } from 'redux/types';\n// 계정 페이지 모달 Import\nimport AccountModal from '../../common/modal/AccountModal';\n\nconst AccountForm = () => {\n    const myaccountObj = useSelector(state => state.myac.payload);\n    const myaccountChk = useSelector(state => state.myac.isMyAccountReceive);\n    const { profileurl } = useSelector(state => state.myac);\n    const myaccountSendChk = useSelector(state => state.myac.isMyAccountUpdate);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [profileImage, setProfileImage] = useState({ src: null });\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [prevpw, setPrevPw] = useState('');\n    const [newpw, setNewPw] = useState('');\n    const [re_newpw, setReNewPw] = useState('');\n    /* const [regexpPrevPwCheck, setExpPrevPwCheck] = useState(true); */\n    const [regexpNewPwCheck, setExpNewPwCheck] = useState(true);\n    const [prevnewPwCheck, setPrevNewPwCheck] = useState(false);\n    const [newrenewPwCheck, setNewRenewPwCheck] = useState(true);\n    const [totalCheck, setTotalCheck] = useState(true);\n    const [nameEditOpen, setNameEditOpen] = useState(false);\n    const [nameContext, setNameContext] = useState('이름 수정');\n    // 계정 페이지 Modal\n    const [showModal, setShowModal] = useState(false);\n    const [modalMsg, setModalMsg] = useState('');\n\n    // DB에서 현재 로그인중인 계정정보 불러오기\n    useEffect(() => {\n        console.log('계정정보 불러오기');\n        const body = {\n            token: localStorage.getItem('token'),\n        };\n        dispatch({\n            type: MYAC_RECEIVE_REQUEST,\n            payload: body,\n        });\n    }, []);\n\n    // 계정정보를 성공적으로 불러왔다면 이름과 이메일을 Input에 업데이트 하기\n    useEffect(() => {\n        console.log(myaccountObj);\n        if (myaccountChk) {\n            setName(myaccountObj.user_name);\n            setEmail(myaccountObj.email);\n            setProfileImage(myaccountObj.profileImage);\n            console.log('계정정보 >> ', myaccountObj);\n            console.log('여기서 이미지 ==> ', myaccountObj.profileImage);\n        }\n    }, [myaccountChk]);\n\n    useEffect(() => {\n        console.log('접근하냐?');\n        console.log('profileuri ==> ', profileurl);\n        console.log('profileImg ==> ', profileImage);\n        if (profileurl !== '') {\n            setProfileImage(profileurl);\n        }\n    }, [profileurl]);\n\n    // 이전 비밀번호가 일치한다면, 새로운 이름과 비밀번호로 업데이트 하기\n    useEffect(() => {\n        console.log('myaccountObj 객체의 상태값이 바뀌었습니다');\n        // 이전 비밀번호와 일치하다는 답변을 받으면, myaccountObj는 true/false 값 형태로 바뀜\n        // 비밀번호 변경 요청\n        if (myaccountObj === true && !nameEditOpen) {\n            const body = {\n                token: localStorage.getItem('token'),\n                new_name: name,\n                new_pw: newpw,\n            };\n            dispatch({\n                type: MYAC_UPDATE_REQUEST,\n                payload: body,\n            });\n            // 이름 변경 요청\n        } else if (myaccountObj === true && nameEditOpen) {\n            const body = {\n                token: localStorage.getItem('token'),\n                new_name: name,\n                new_pw: prevpw,\n            };\n            dispatch({\n                type: MYAC_UPDATE_REQUEST,\n                payload: body,\n            });\n        }\n    }, [myaccountObj]);\n\n    // 새로운 비밀번호가 적절한 형식의 비밀번호를 갖추었는지 확인\n    useEffect(() => {\n        const pw = newpw;\n        const exp = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\dd$@$!%*#?&]{8,50}$/.test(pw);\n        if (!exp) {\n            setExpNewPwCheck(false);\n        } else {\n            setExpNewPwCheck(true);\n        }\n    }, [newpw]);\n\n    // 이전 비밀번호와 새로운 비밀번호가 같은지 확인\n    useEffect(() => {\n        if (prevpw === newpw && newpw !== '') {\n            setPrevNewPwCheck(true);\n        } else {\n            setPrevNewPwCheck(false);\n        }\n    });\n\n    // 새로운 비밀번호와 재입력한 새로운 비밀번호가 같은지 확인\n    useEffect(() => {\n        if (newpw === re_newpw) {\n            setNewRenewPwCheck(true);\n        } else {\n            setNewRenewPwCheck(false);\n        }\n    });\n\n    // 프로필이 성공적으로 업데이트 되었을 때,\n    useEffect(() => {\n        if (myaccountSendChk) {\n            history.push('/');\n            dispatch({\n                type: MYAC_INIT,\n            });\n        }\n    }, [myaccountSendChk]);\n\n    const onChange = e => {\n        const { className } = e.target;\n        if (className === 'user-name-input') {\n            setName(e.target.value);\n        } else if (className === 'user-email-input') {\n            setEmail(e.target.value);\n        } else if (className === 'pwd-input') {\n            setPrevPw(e.target.value);\n        } else if (className === 'new-pwd-input') {\n            setNewPw(e.target.value);\n        } else if (className === 're-new-pwd-input') {\n            setReNewPw(e.target.value);\n        } else if (className === 'file-input') {\n            console.log('이미지 들어옴', e.target.files);\n        }\n    };\n\n    const onClick = e => {\n        e.preventDefault();\n        console.log('이전 비밀번호 일치여부 확인 -> 비밀번호 변경');\n        // 저장 버튼 클릭 시, 이전과 새로운 비밀번호가 적절한 형식을 가지고 있는지 비교\n        // 그리고 이전 비밀번호와 새로운 비밀번호의 비교, 새로운 비밀번호와 재입력한 새로운 비밀번호를 비교하여 문제가 없으면 저장\n        if (e.target.className === 'acc-save-pw') {\n            setTotalCheck(false);\n            if (regexpNewPwCheck && newrenewPwCheck && !prevnewPwCheck) {\n                const body = {\n                    pw: prevpw,\n                    token: localStorage.getItem('token'),\n                };\n                dispatch({\n                    type: MYAC_SEND_PREVPW_REQUEST,\n                    payload: body,\n                });\n            }\n        } else if (e.target.className === 'acc-save-name-pwd') {\n            const body = {\n                pw: prevpw,\n                token: localStorage.getItem('token'),\n            };\n            dispatch({\n                type: MYAC_SEND_PREVPW_REQUEST,\n                payload: body,\n            });\n        } else if (e.target.className === 'acc-save-name' && nameContext === '이름 수정') {\n            setNameContext('취소 하기');\n            setNameEditOpen(true);\n        } else if (e.target.className === 'acc-save-name' && nameContext === '취소 하기') {\n            setNameContext('이름 수정');\n            setNameEditOpen(false);\n            setName(myaccountObj.user_name);\n        }\n    };\n\n    const imgRef = useRef();\n    // const deleteImgRef = useRef();\n\n    const handleClickUploadImage = () => {\n        imgRef.current.click();\n    };\n    // const handleClickDeleteImage = e => {\n    //     e.preventDefault();\n    //     deleteImgRef.current.click();\n    // };\n    // const handleDeleteImage = () => {\n    //     console.log('delete?');\n    //     const token = localStorage.getItem('token');\n    //     dispatch({\n    //         type: MYAC_PROFILE_IMAGE_DELETE_REQUEST,\n    //         payload: token,\n    //     });\n    // };\n\n    const handleChangeImage = async e => {\n        console.log('handleChangeImage => ', e.target.value);\n        console.log('file[0]', e.target.files[0]);\n        if (e.target.value !== '' && e.target.files[0].type.match(/image/g)) {\n            if (!e.target.files[0].type.includes('gif')) {\n                if (e.target.files[0].size < 5000000) {\n                    const imageFormData = new FormData();\n                    imageFormData.append('upload', e.target.files[0]);\n\n                    // FormData 객체는 브라우저 정책 때문에 그냥 console.log()로 찍으면 안 보임. 아래 형식으로 확인\n                    // for (const key of imageFormData.keys()) {\n                    //     console.log(key);\n                    // }\n\n                    const token = localStorage.getItem('token');\n\n                    const body = {\n                        imageFormData,\n                        token,\n                    };\n\n                    dispatch({\n                        type: MYAC_PROFILE_IMAGE_UPDATE_REQUEST,\n                        payload: body,\n                    });\n\n                    setShowModal(true);\n                } else {\n                    console.warn('이미지의 크기는 최대 5MB를 초과할 수 없습니다.다른 이미지를 선택해주세요');\n                    setShowModal(true);\n                    setModalMsg('이미지의 크기는 최대 5MB를 초과할 수 없습니다.다른 이미지를 선택해주세요');\n                }\n            } else {\n                console.warn('이미지는 JPG, JPEG, PNG 확장자만 가능합니다.');\n                setShowModal(true);\n                setModalMsg('이미지는 JPG, JPEG, PNG 확장자만 가능합니다.');\n            }\n        } else {\n            console.warn('이미지 파일이 아닙니다.');\n            setShowModal(true);\n            setModalMsg('이미지 파일이 아닙니다.');\n        }\n    };\n    const compareprevDB = <>{myaccountSendChk ? null : <div className=\"err-msg\">비밀번호를 다시 확인해 주세요.</div>}</>;\n\n    const prevpwContent = (\n        <>\n            <div className=\"err-wrap\">\n                {prevpw !== '' ? compareprevDB : <div className=\"err-msg\">비밀번호를 다시 확인해 주세요.</div>}\n                {/* <div className=\"err-msg\">현재 비밀번호와 맞지 않습니다.</div>\n                                        <div className=\"err-msg\">새 비밀번호가 서로 일치하지 않습니다.</div>  */}\n            </div>\n        </>\n    );\n\n    const newpwConteht = (\n        <>\n            <div className=\"err-wrap\">\n                {newpw !== '' ? (\n                    <>\n                        {regexpNewPwCheck ? null : <div className=\"err-msg\">적절하지 않은 형식입니다(영문+숫자+특수문자 포함 8자리 이상)</div>}\n                        {prevnewPwCheck ? <div className=\"err-msg\">이전 비밀번호와 동일합니다.</div> : null}\n                    </>\n                ) : (\n                    <div className=\"err-msg\">새로운 비밀번호를 입력해 주세요</div>\n                )}\n            </div>\n        </>\n    );\n\n    const renewpwContent = (\n        <div className=\"err-wrap\">\n            {re_newpw !== '' ? (\n                <>{newrenewPwCheck ? null : <div className=\"err-msg\">새로운 비밀번호와 일치하지 않습니다.</div>}</>\n            ) : (\n                <div className=\"err-msg\">확인을 위해 새로운 비밀번호를 다시 입력해주세요.</div>\n            )}\n        </div>\n    );\n\n    const nameEditContent = (\n        <>\n            <div className=\"info-detail current-pwd\">\n                <div className=\"info-label user-password-label\">현재 비번</div>\n                <input className=\"pwd-input\" type=\"password\" onChange={onChange} />\n                <button className=\"acc-save-name-pwd\" type=\"button\" onClick={onClick}>\n                    저장 하기\n                </button>\n            </div>\n        </>\n    );\n    return (\n        <>\n            <div className=\"acc-content\">\n                {/* account 페이지 Modal */}\n                {showModal ? <AccountModal modalMsg={modalMsg} setShowModal={setShowModal} setModalMsg={setModalMsg} /> : null}\n                <div className=\"modify-profile-header\">프로필 수정</div>\n                <div className=\"modify-field\">\n                    <div className=\"modify-user-img\">\n                        {console.log(profileImage)}\n                        {profileImage === null ? (\n                            <div className=\"user-avatar-img\">\n                                {/* <button\n                                    type=\"button\"\n                                    className=\"ab-avatar user-avatar-remove\"\n                                    title=\"프로필 사진 삭제\"\n                                    onClick={handleClickDeleteImage}\n                                >\n                                    <i className=\"far fa-trash-alt fa-2x\" />\n                                </button>\n                                <input ref={deleteImgRef} type=\"file\" onClick={handleDeleteImage} /> */}\n\n                                <button type=\"button\" className=\"ab-avatar user-avatar-edit\" onClick={handleClickUploadImage}>\n                                    <i className=\"fas fa-pen fa-2x\" />\n                                </button>\n                                <input ref={imgRef} type=\"file\" hidden onChange={handleChangeImage} />\n                            </div>\n                        ) : (\n                            <div className=\"user-avatar\">\n                                <img className=\"user-img\" src={profileurl || profileImage || './assets/user2.jpg'} alt=\"profile\" />\n                                {/* <button type=\"button\" className=\"ab-avatar user-avatar-remove\" title=\"프로필 사진 삭제\">\n                                    <i className=\"far fa-trash-alt fa-2x\" />\n                                </button>\n                                <input type=\"button\" hidden /> */}\n                                <button type=\"button\" className=\"ab-avatar user-avatar-edit\" onClick={handleClickUploadImage}>\n                                    <i className=\"fas fa-pen fa-2x\" />\n                                </button>\n                                <input ref={imgRef} type=\"file\" hidden onChange={handleChangeImage} />\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"modify-user-info\">\n                        <div className=\"info-detail user-name\">\n                            <div className=\"info-label user-name-label\">이름</div>\n                            <input className=\"user-name-input\" type=\"text\" value={name || ''} onChange={onChange} disabled={!nameEditOpen} />\n                            <button className=\"acc-save-name\" type=\"button\" onClick={onClick}>\n                                {nameContext}\n                            </button>\n                        </div>\n                        {nameEditOpen ? (\n                            nameEditContent\n                        ) : (\n                            <div className=\"info-detail user-email\">\n                                <div className=\"info-label user-email-label\">이메일</div>\n                                <input className=\"user-email-input\" type=\"text\" value={email || ''} onChange={onChange} disabled=\"disabled\" />\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"modify-pwd\">\n                    <div className=\"pwd-title\">비밀번호 변경</div>\n                    <div className=\"pwd-fields\">\n                        <div className=\"info-detail current-pwd\">\n                            <div className=\"cnt-pwd-label\">현재 비번</div>\n                            <input className=\"pwd-input\" type=\"password\" onChange={onChange} />\n                            {totalCheck ? null : prevpwContent}\n                        </div>\n                        <div className=\"info-detail new-pwd\">\n                            <div className=\"new-pwd-label\">새 비번</div>\n                            <input className=\"new-pwd-input\" type=\"password\" onChange={onChange} />\n                            {totalCheck ? null : newpwConteht}\n                        </div>\n                        <div className=\"info-detail retype-pwd\">\n                            <div className=\"re-pwd-label\">새 비번 (Retype)</div>\n                            <input className=\"re-new-pwd-input\" type=\"password\" onChange={onChange} />\n                            {/* 해당 부분 에러가 발생 (err-wrap 태그를 삭제하면 정상적으로 err-msg가 나오지만, 그렇지않으면 err-msg가 출력되지 않음) */}\n                            {totalCheck ? null : renewpwContent}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <button className=\"acc-save-pw\" type=\"button\" onClick={onClick} disabled={nameEditOpen}>\n                        비밀번호 변경\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AccountForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MYAC_RECEIVE_REQUEST } from '../../redux/types';\n\nconst profilecommon = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        console.log('sidetab useEffect');\n        const body = {\n            token: localStorage.getItem('token'),\n        };\n        dispatch({\n            type: MYAC_RECEIVE_REQUEST,\n            payload: body,\n        });\n    }, []);\n\n    const myaccountObj = useSelector(state => state.myac.payload);\n    return (\n        <div className=\"profile\">\n            <div className=\"img-profile\">\n                {console.log(myaccountObj)}\n                {myaccountObj && myaccountObj.profileImage !== null ? (\n                    <img src={myaccountObj && myaccountObj.profileImage} alt=\"profile\" />\n                ) : (\n                    <div className=\"empty-image\" />\n                )}\n            </div>\n            <div className=\"profile-infos\">\n                <div className=\"profile-info profile-name\">{myaccountObj.user_name}</div>\n                <div className=\"profile-info profile-email\">\n                    <i className=\"far fa-envelope\" /> {myaccountObj.email}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default profilecommon;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { LOGOUT_REQUEST, MYAC_INIT } from '../../redux/types';\n\nconst profilelogout = () => {\n    const dispatch = useDispatch();\n    const onLogout = useCallback(() => {\n        // 메모제이션된 콜백을 반환한다.\n        dispatch({\n            type: LOGOUT_REQUEST,\n        });\n        dispatch({\n            type: MYAC_INIT,\n        });\n    }, [dispatch]);\n    return (\n        <Link onClick={onLogout} to=\"/\">\n            &nbsp;로그아웃\n        </Link>\n    );\n};\n\nexport default profilelogout;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AccountForm from '../../components/profile/accountform';\nimport ProfileCommon from './profilecommon';\nimport ProfileLogout from './proflielogout';\n\nconst Profile = () => (\n    <>\n        {/* baneer */}\n        <section className=\"banner-section\" />\n        <div id=\"account-wrap\" className=\"lang-kor\">\n            {/* section1 - 페이지 설명 */}\n            <section className=\"account-page-header\">\n                <div className=\"acc-title\">나의 계정</div>\n                <div className=\"acc-header\">내 프로필</div>\n            </section>\n            <aside className=\"sidebar\">\n                <ProfileCommon />\n                <div className=\"profile-tabs\">\n                    <Link className=\"profile-tab answer-tab\" to=\"/profile/answer\">\n                        나의 답변\n                    </Link>\n                    <Link className=\"profile-tab account-tab select-tab\" to=\"/profile\">\n                        나의 계정\n                    </Link>\n                </div>\n                <div className=\"logout-button\">\n                    <i className=\"fas fa-power-off\" />\n                    <ProfileLogout />\n                </div>\n            </aside>\n            <section className=\"account-form\">\n                <AccountForm />\n            </section>\n        </div>\n    </>\n);\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst AnswerComponent = ({ currentMonth, currentDay }) => {\n    const { answers, currentYear } = useSelector(state => state.answer);\n    const [types, setTypes] = useState([]);\n    const history = useHistory();\n    useEffect(() => {\n        console.log('compoenent');\n        const newArr =\n            answers !== ''\n                ? [\n                      ...new Set(\n                          answers.map(answer =>\n                              answer.YEAR === currentYear && answer.MONTH === currentMonth && answer.DAY === currentDay ? answer.TYPE : '',\n                          ),\n                      ),\n                  ].filter(val => val !== '')\n                : '';\n        setTypes(newArr);\n    }, []);\n\n    const handleClickEvent = type => {\n        history.push(`/profile/answer/view?type=${type}&year=${currentYear}&month=${currentMonth}&day=${currentDay}`);\n    };\n    return (\n        <>\n            {types &&\n                types !== [] &&\n                types.map(type => (\n                    <button type=\"button\" className={`my-answer-elem ${type}-btn lang-kor`} onClick={() => handleClickEvent(type)} key={type}>\n                        {type === 'answerbyme' ? '내가 보는 나' : ''}\n                        {type === 'answerbyothers' ? '남이 보는 나' : ''}\n                        {type === 'answerforrefl' ? '오늘의 성찰' : ''}\n                    </button>\n                ))}\n        </>\n    );\n};\n\nexport default AnswerComponent;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport AnswerComponent from './answer-component';\n\nconst AnswerDayList = ({ currentMonth }) => {\n    const { answers, currentYear } = useSelector(state => state.answer);\n    const [days, setDays] = useState([]);\n    useEffect(() => {\n        console.log('currentMonth =>', currentMonth);\n        const newArr =\n            answers !== ''\n                ? [...new Set(answers.map(answer => (answer.YEAR === currentYear && answer.MONTH === currentMonth ? answer.DAY : '')))].filter(\n                      val => val !== '',\n                  )\n                : '';\n        setDays(newArr);\n    }, [currentYear]);\n    return (\n        <>\n            {days !== [] &&\n                days.map(day => (\n                    <div key={day} className=\"category category-day\">\n                        <div className=\"label label-day\">{day}일</div>\n                        <AnswerComponent currentMonth={currentMonth} currentDay={day} />\n                    </div>\n                ))}\n        </>\n    );\n};\n\nexport default AnswerDayList;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport AnswerDayList from './answer-day-list';\n\nconst AnswerMonthList = ({ currentYear }) => {\n    const { answers } = useSelector(state => state.answer);\n    const [months, setMonths] = useState([]);\n    useEffect(() => {\n        const monthArr =\n            answers !== '' ? [...new Set(answers.map(answer => (answer.YEAR === currentYear ? answer.MONTH : '')))].filter(val => val !== '') : '';\n        setMonths(monthArr);\n    }, [currentYear]);\n    return (\n        <>\n            {months &&\n                months !== [] &&\n                months.map(month => (\n                    <div key={month} className=\"category category-month\">\n                        <div className=\"label label-month\">{month}월</div>\n                        <AnswerDayList currentMonth={month} />\n                    </div>\n                ))}\n        </>\n    );\n};\n\nexport default AnswerMonthList;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport AnswerMonthList from './answer-month-list';\n\nconst AnswerYearList = () => {\n    const { answers, currentYear } = useSelector(state => state.answer);\n\n    useEffect(() => {\n        console.log(currentYear);\n        console.log(answers);\n    });\n    return (\n        <>\n            <div className=\"category category-year\">\n                <div className=\"label label-year\">{currentYear}</div>\n                <AnswerMonthList currentYear={currentYear} />\n            </div>\n        </>\n    );\n};\n\nexport default AnswerYearList;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ANSWER_LOAD_REQUEST } from 'redux/types';\nimport AnswerYearList from './answer-year-list';\n\nconst AnswerList = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        dispatch({\n            type: ANSWER_LOAD_REQUEST,\n            payload: token,\n        });\n    }, []);\n    return <AnswerYearList />;\n};\n\nexport default AnswerList;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ANSWER_YEAR_SET_REQUEST } from 'redux/types';\n\nconst AnswerTab = () => {\n    const dispatch = useDispatch();\n    const { answers, currentYear } = useSelector(state => state.answer);\n    const [yearTab, setYearTab] = useState([]);\n\n    useEffect(() => {\n        if (answers) {\n            const newArr = [...new Set(answers.map(answer => answer.YEAR))];\n            // const uniqueArr = newArr.filter((elem, index) => newArr.indexOf(elem) === index);\n            console.log(newArr[newArr.length - 1]);\n            setYearTab(newArr);\n        }\n    }, [answers]);\n\n    const handleClickEvent = date => {\n        dispatch({\n            type: ANSWER_YEAR_SET_REQUEST,\n            payload: date,\n        });\n    };\n    return (\n        <>\n            <div className=\"content-header\">연도별</div>\n            <ul className=\"filter-list\">\n                {yearTab.length === 0 ? <div className=\"year-click-text\">※&nbsp;작성한 답변이 없습니다. 답변을 저장해주세요.</div> : null}\n                {yearTab &&\n                    yearTab.map(year => (\n                        <li key={year}>\n                            <button className=\"year-link\" type=\"button\" onClick={() => handleClickEvent(year)}>\n                                {year}\n                            </button>\n                        </li>\n                    ))}\n            </ul>\n            {yearTab.length !== 0 && currentYear === '' ? <div className=\"year-click-text\">※&nbsp;연도에 해당하는 탭을 눌러주세요</div> : null}\n        </>\n    );\n};\n\nexport default AnswerTab;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProfileCommon from './profilecommon';\nimport ProfileLogout from './proflielogout';\nimport AnswerList from '../../components/answer/answerlist';\nimport AnswerTab from '../../components/answer/answertab';\n\nconst AnswerMain = () => (\n    <>\n        {/* banner */}\n        <section className=\"banner-section\" />\n        <div id=\"account-wrap\" className=\"lang-kor\">\n            <section className=\"account-page-header\">\n                <div className=\"acc-title\">나의 답변</div>\n                <div className=\"acc-header\">답변 메인</div>\n            </section>\n            <aside className=\"sidebar\">\n                <ProfileCommon />\n                <div className=\"profile-tabs\">\n                    <Link className=\"profile-tab answer-tab select-tab\" to=\"/profile/answer\">\n                        나의 답변\n                    </Link>\n                    <Link className=\"profile-tab account-tab\" to=\"/profile\">\n                        나의 계정\n                    </Link>\n                </div>\n                <div className=\"logout-button\">\n                    <i className=\"fas fa-power-off\" />\n                    <ProfileLogout />\n                </div>\n            </aside>\n            <section className=\"account-form\">\n                <div className=\"user-ans-content lang-kor\">\n                    <AnswerTab />\n                    <div className=\"category-wrapper\">\n                        <AnswerList />\n                    </div>\n                </div>\n            </section>\n        </div>\n    </>\n);\n\nexport default AnswerMain;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ANSWER_DETAIL_LOAD_REQUEST } from 'redux/types';\n\nconst AnswerDetailComponent = ({ query }) => {\n    const { year, month, day, type } = query;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { answerDetail } = useSelector(state => state.answer);\n\n    const handleDelete = () => {\n        // 삭제\n\n        // 새로고침\n        history.goBack();\n    };\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        const body = { year, month, day, type, token };\n\n        dispatch({\n            type: ANSWER_DETAIL_LOAD_REQUEST,\n            payload: body,\n        });\n    }, []);\n    return (\n        <div className=\"my-answer-container\">\n            <div className=\"my-answer-content\">\n                <div className=\"my-answer-header\">\n                    <button className=\"nav-btn btn-pre\" type=\"button\" onClick={() => history.goBack()}>\n                        <i className=\"fas fa-chevron-left fa-2x\" />\n                    </button>\n                    <div className=\"title-text\">\n                        {type === 'answerbyme' ? '내가 보는 나' : ''}\n                        {type === 'answerbyothers' ? '남이 보는 나' : ''}\n                        {type === 'answerforrefl' ? '오늘의 성찰' : ''}\n                    </div>\n                    <div>\n                        <button\n                            className=\"answer-delete-btn\"\n                            type=\"button\"\n                            onClick={() => {\n                                handleDelete();\n                            }}\n                        >\n                            삭제\n                        </button>\n                    </div>\n                    <div className=\"date-text\">{`${year}/${month}/${day}`}</div>\n                </div>\n                <div className=\"answers-wrapper\">\n                    {answerDetail &&\n                        answerDetail !== '' &&\n                        answerDetail.map(detail => (\n                            <div key={detail.seq} className=\"answers\">\n                                <div className=\"question-field\">{`${detail.question}`} </div>\n                                <div className=\"answer-field\">\n                                    <div className=\"answer-elem\">{`${detail.answer}`}</div>\n                                </div>\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AnswerDetailComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ProfileCommon from './profilecommon';\nimport ProfileLogout from './proflielogout';\nimport AnswerDetailComponent from '../../components/answer/answer-detail-component';\n\nconst AnswerDetail = ({ location }) => {\n    const { search } = location;\n    const query = queryString.parse(search);\n    return (\n        <>\n            <section className=\"banner-section\" />\n            <div id=\"account-wrap\" className=\"lang-kor\">\n                <section className=\"account-page-header\">\n                    <div className=\"acc-title\">나의 답변</div>\n                    <div className=\"acc-header\">상세 답변</div>\n                </section>\n                <aside className=\"sidebar\">\n                    <ProfileCommon />\n                    <div className=\"profile-tabs\">\n                        <Link className=\"profile-tab answer-tab select-tab\" to=\"/profile/answer\">\n                            나의 답변\n                        </Link>\n                        <Link className=\"profile-tab account-tab\" to=\"/profile\">\n                            나의 계정\n                        </Link>\n                    </div>\n                    <div className=\"logout-button\">\n                        <i className=\"fas fa-power-off\" />\n                        <ProfileLogout />\n                    </div>\n                </aside>\n                <section className=\"account-form\">\n                    <AnswerDetailComponent query={query} />\n                </section>\n            </div>\n        </>\n    );\n};\n\nexport default AnswerDetail;\n","import React from 'react';\n\nconst Footer = () => {\n    const thisYear = () => {\n        const year = new Date().getFullYear();\n        return year;\n    };\n    return (\n        <footer id=\"footer\">\n            <p>\n                Copyright &copy; <span>{thisYear()}</span>&nbsp;\n                <a id=\"copyright-text\" href=\"https://github.com/giraff/qallah-mini\">\n                    Qallah\n                </a>\n                &nbsp;All rights reserved.\n            </p>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { LOGOUT_REQUEST, MYAC_RECEIVE_REQUEST, MYAC_INIT } from '../../redux/types';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { isAuthenticated } = useSelector(state => state.auth);\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [profileImage, setProfileImage] = useState({ src: null });\n    const myaccountObj = useSelector(state => state.myac.payload);\n\n    const onLogout = useCallback(() => {\n        // 메모제이션된 콜백을 반환한다.\n        dispatch({\n            type: LOGOUT_REQUEST,\n        });\n        dispatch({\n            type: MYAC_INIT,\n        });\n    }, [dispatch]);\n\n    const handleClickEvent = () => {\n        setMenuOpen(false);\n    };\n    useEffect(() => {\n        setMenuOpen(false);\n    }, [isAuthenticated, dispatch, history]);\n\n    useEffect(() => {\n        const body = {\n            token: localStorage.getItem('token'),\n        };\n        dispatch({\n            type: MYAC_RECEIVE_REQUEST,\n            payload: body,\n        });\n    }, [isAuthenticated]);\n\n    useEffect(() => {\n        console.log('지금의 객체 >>', myaccountObj);\n        if (myaccountObj.profileImage !== null) {\n            setProfileImage(myaccountObj.profileImage);\n        } else {\n            setProfileImage(null);\n        }\n        console.log('지금의 이미지 >>', profileImage);\n    }, [myaccountObj]);\n\n    const authLink = (\n        <>\n            <nav className=\"header-nav\">\n                <ul>\n                    <li className=\"hidden bars\">\n                        <i\n                            aria-label=\"text\"\n                            className=\"fas fa-bars fa-2x\"\n                            onClick={() => setMenuOpen(true)}\n                            role=\"button\"\n                            tabIndex={0}\n                            onKeyDown={() => setMenuOpen(true)}\n                        />\n                    </li>\n                    <li className=\"nav-logo\">\n                        <Link to=\"/\">\n                            <h1 className=\"logo\">Qallah</h1>\n                        </Link>\n                    </li>\n                    <li className=\"nav-item lang-kor\">\n                        <Link to=\"/tome\">내가 보는 나</Link>\n                    </li>\n                    <li className=\"nav-item lang-kor\">\n                        <Link to=\"/byother\">남이 보는 나</Link>\n                    </li>\n                    <li className=\"nav-item lang-kor\">\n                        <Link to=\"/experience\">내가 한 경험</Link>\n                    </li>\n                    <li className=\"nav-item lang-kor\">\n                        <Link to=\"/refl\">인생의 성찰</Link>\n                    </li>\n                    <li className=\"nav-item-gnb\">\n                        <div className=\"tool-tip-box\">\n                            <div className=\"nav-profile\">\n                                <div className=\"nav-img-profile\">\n                                    {profileImage !== null ? <img src={profileImage} alt=\"profile\" /> : <div className=\"empty-image\" />}\n                                </div>\n                            </div>\n                            <div className=\"tool-tip-content lang-kor\">\n                                <Link to=\"/profile\">\n                                    <div className=\"tool-tip-mypage\">마이페이지</div>\n                                </Link>\n                                <Link onClick={onLogout} to=\"/\">\n                                    <div className=\"tool-tip-logout\">로그아웃</div>\n                                </Link>\n                            </div>\n                        </div>\n                    </li>\n                    <li className=\"hidden nav-logo-q\">\n                        <Link to=\"/\" onClick={() => handleClickEvent()}>\n                            <h1 className=\"logo\">Q</h1>\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </>\n    );\n\n    const guestLink = (\n        <>\n            <nav className=\"header-nav\">\n                <ul>\n                    <li className=\"hidden bars\">\n                        <i\n                            aria-label=\"text\"\n                            className=\"fas fa-bars fa-2x\"\n                            onClick={() => setMenuOpen(true)}\n                            role=\"button\"\n                            tabIndex={0}\n                            onKeyDown={() => setMenuOpen(true)}\n                        />\n                    </li>\n                    <li className=\"nav-logo\">\n                        <Link to=\"/\">\n                            <h1 className=\"logo\">Qallah</h1>\n                        </Link>\n                    </li>\n                    <li className=\"nav-item-gnb\">\n                        <Link to=\"/login\">\n                            <div id=\"nav-login\">Login</div>\n                        </Link>\n                    </li>\n                    <li className=\"hidden nav-logo-q\">\n                        <Link to=\"/\" onClick={() => handleClickEvent()}>\n                            <h1 className=\"logo\">Q</h1>\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n        </>\n    );\n    return (\n        <header id=\"header\">\n            {isAuthenticated ? authLink : guestLink}\n            <div className={`menu-wrap ${menuOpen ? 'MenuOpen' : ''}`}>\n                <i\n                    aria-label=\"text\"\n                    className=\"fas fa-bars fa-2x\"\n                    onClick={() => {\n                        setMenuOpen(false);\n                        console.log('click');\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={() => setMenuOpen(false)}\n                />\n                <div className=\"menu-inner\">\n                    {/* 로그아웃 상태 */}\n                    {isAuthenticated ? (\n                        <>\n                            <ul>\n                                <li>\n                                    <Link to=\"/tome\" onClick={() => handleClickEvent()}>\n                                        <div className=\"menu-item\">내가 보는 나</div>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/byother\" onClick={() => handleClickEvent()}>\n                                        <div className=\"menu-item\">남이 보는 나</div>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/experience\" onClick={() => handleClickEvent()}>\n                                        <div className=\"menu-item\">내가 한 경험</div>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/refl\" onClick={() => handleClickEvent()}>\n                                        <div className=\"menu-item\">인생의 성찰</div>\n                                    </Link>\n                                </li>\n                                <li>\n                                    <Link to=\"/profile\" onClick={() => handleClickEvent()}>\n                                        <div className=\"menu-item\">마이 페이지</div>\n                                    </Link>\n                                </li>\n                            </ul>\n                            <div className=\"menu-user-wrap\">\n                                <div className=\"user-name-wrap\">\n                                    <Link onClick={onLogout} to=\"/\">\n                                        <span>\n                                            <i className=\"fas fa-sign-out-alt\" />\n                                        </span>\n                                        &nbsp; LOGOUT\n                                    </Link>\n                                </div>\n                            </div>\n                        </>\n                    ) : (\n                        <>\n                            <ul>\n                                <li className=\"menu-item\">\n                                    <Link to=\"/login\" onClick={() => handleClickEvent()}>\n                                        내가 보는 나\n                                    </Link>\n                                </li>\n                                <li className=\"menu-item\">\n                                    <Link to=\"/login\" onClick={() => handleClickEvent()}>\n                                        남이 보는 나\n                                    </Link>\n                                </li>\n                                <li className=\"menu-item\">\n                                    <Link to=\"/login\" onClick={() => handleClickEvent()}>\n                                        내가 한 경험\n                                    </Link>\n                                </li>\n                                <li className=\"menu-item\">\n                                    <Link to=\"/login\" onClick={() => handleClickEvent()}>\n                                        인생의 성찰\n                                    </Link>\n                                </li>\n                            </ul>\n                            <div className=\"menu-user-wrap\">\n                                <div className=\"user-name-wrap\">\n                                    <Link to=\"/login\" onClick={() => handleClickEvent()}>\n                                        <span>\n                                            <i className=\"fas fa-user\" />\n                                        </span>\n                                        &nbsp; Login\n                                    </Link>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                    {/* 로그인 상태 */}\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter, Redirect, Switch, Route } from 'react-router-dom';\nimport Main from '../pages/Main';\nimport Login from '../pages/Login';\nimport Register from '../pages/Register';\nimport ToMeMain from '../pages/tome/ToMeMain';\nimport ToMeDetail from '../pages/tome/ToMeDetail';\nimport ToMeHistory from '../pages/tome/ToMeHistory';\nimport ToMeDone from '../pages/tome/ToMeDone';\nimport ByOtherMain from '../pages/byother/ByOtherMain';\nimport ByOtherDetail from '../pages/byother/ByOtherDetail';\nimport ByOtherDone from '../pages/byother/ByOtherDone';\nimport ByOtherHistory from '../pages/byother/ByOtherHistory';\nimport experienceMain from '../pages/experience/experienceMain';\nimport experienceForm from '../pages/experience/experienceForm';\nimport experienceDone from '../pages/experience/experienceDone';\nimport ReflectionMain from '../pages/reflection/reflectionMain';\nimport ReflectionDetail from '../pages/reflection/reflectionDetail';\nimport ReflectionDone from '../pages/reflection/reflectionDone';\nimport ReflectionHistory from '../pages/reflection/reflectionHistory';\nimport Profile from '../pages/account/profile';\nimport AnswerMain from '../pages/account/answermain';\nimport AnswerDetail from '../pages/account/answerdetail';\nimport Footer from '../components/layout/Footer';\nimport Header from '../components/layout/Header';\n\nconst AllRouter = () => (\n    <>\n        <BrowserRouter>\n            <div id=\"wrapper\">\n                <Header />\n                <Switch>\n                    <Route path=\"/\" exact component={Main} />\n                    <Route path=\"/login\" exact component={Login} />\n                    <Route path=\"/register\" exact component={Register} />\n                    <Route path=\"/tome\" exact component={ToMeMain} />\n                    <Route path=\"/tome/detail\" exact component={ToMeDetail} />\n                    <Route path=\"/tome/history\" exact component={ToMeHistory} />\n                    <Route path=\"/tome/done\" exact component={ToMeDone} />\n                    <Route path=\"/byother/detail/:id\" exact component={ByOtherDetail} />\n                    <Route path=\"/byother\" exact component={ByOtherMain} />\n                    <Route path=\"/byother/done\" exact component={ByOtherDone} />\n                    <Route path=\"/byother/history\" exact component={ByOtherHistory} />\n                    <Route path=\"/experience\" exact component={experienceMain} />\n                    <Route path=\"/experience/form\" exact component={experienceForm} />\n                    <Route path=\"/experience/done\" exact component={experienceDone} />\n                    <Route path=\"/refl\" exact component={ReflectionMain} />\n                    <Route path=\"/refl/detail\" exact component={ReflectionDetail} />\n                    <Route path=\"/refl/done\" exact component={ReflectionDone} />\n                    <Route path=\"/refl/history\" exact component={ReflectionHistory} />\n                    <Route path=\"/profile\" exact component={Profile} />\n                    <Route path=\"/profile/answer\" exact component={AnswerMain} />\n                    <Route path=\"/profile/answer/view\" exact component={AnswerDetail} />\n                    <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n                <Footer />\n            </div>\n        </BrowserRouter>\n    </>\n);\n\nexport default AllRouter;\n","import React from 'react';\n// App.js의 역할 : root file. Redux store와 router 결합시키기\n\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './store';\n\nimport AllRouter from './routes/Router';\n\nconst App = () => (\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <AllRouter />\n        </ConnectedRouter>\n    </Provider>\n);\n\nexport default App;\n","import store from '../store';\nimport { USER_LOADING_REQUEST } from '../redux/types';\n\nconst loadUser = () => {\n    console.log('loadUser 실행중');\n    try {\n        store.dispatch({\n            type: USER_LOADING_REQUEST,\n            payload: localStorage.getItem('token'),\n        });\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport default loadUser;\n","// React : view를 만들기 위한 라이브러리\nimport React from 'react';\n// ReactDOM : UI를 브라우저에 렌더링할 때 사용하는 라이브러리\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport loadUser from './common/loadUser';\n\nimport './common.css';\n\nloadUser();\n\n// 브라우저에 렌더링하는 도구(ReactDOM)에서 render를 가져와\n// React 규격에 맞추어 <App>을 그려주라는 뜻\n// 그때 인자로 넘겨주는 document.getElementById('root')\n// => id가 'root'인 태그 안 쪽에다가 App을 그려라\nconsole.log('test');\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}